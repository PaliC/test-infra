yarn run v1.22.19
$ jest test/ciflow-push-trigger.test.ts
info  - Loaded env from /Users/sahanp/test-infra/torchci/.env
  console.log
    context is

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:145:11)
          at async Promise.all (index 0)

  console.log
    Context {
      name: 'pull_request',
      id: '123',
      payload: {
        action: 'labeled',
        number: 5,
        pull_request: {
          url: 'https://api.github.com/repos/suo/actions-test/pulls/5',
          id: 807065505,
          node_id: 'PR_kwDOGjcVQM4wGteh',
          html_url: 'https://github.com/suo/actions-test/pull/5',
          diff_url: 'https://github.com/suo/actions-test/pull/5.diff',
          patch_url: 'https://github.com/suo/actions-test/pull/5.patch',
          issue_url: 'https://api.github.com/repos/suo/actions-test/issues/5',
          number: 5,
          state: 'open',
          locked: false,
          title: 'Suo patch 1',
          user: [Object],
          body: null,
          created_at: '2021-12-20T23:18:22Z',
          updated_at: '2022-01-06T02:46:07Z',
          closed_at: null,
          merged_at: null,
          merge_commit_sha: '4edd5906e4c44ac7e83d5de64019d750e8ec123d',
          assignee: null,
          assignees: [],
          requested_reviewers: [],
          requested_teams: [],
          labels: [Array],
          milestone: null,
          draft: false,
          commits_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/commits',
          review_comments_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/comments',
          review_comment_url: 'https://api.github.com/repos/suo/actions-test/pulls/comments{/number}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/issues/5/comments',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/600835c72e2462ea095cf19f1fabe39488dd0d53',
          head: [Object],
          base: [Object],
          _links: [Object],
          author_association: 'OWNER',
          auto_merge: null,
          active_lock_reason: null,
          merged: false,
          mergeable: true,
          rebaseable: true,
          mergeable_state: 'clean',
          merged_by: null,
          comments: 0,
          review_comments: 0,
          maintainer_can_modify: false,
          commits: 3,
          additions: 2,
          deletions: 0,
          changed_files: 1
        },
        label: {
          id: 3702625053,
          node_id: 'LA_kwDOGjcVQM7csZMd',
          url: 'https://api.github.com/repos/suo/actions-test/labels/ciflow/test',
          name: 'ciflow/trunk',
          color: 'E426F5',
          default: false,
          description: ''
        },
        repository: {
          id: 439817536,
          node_id: 'R_kgDOGjcVQA',
          name: 'actions-test',
          full_name: 'suo/actions-test',
          private: false,
          owner: [Object],
          html_url: 'https://github.com/suo/actions-test',
          description: null,
          fork: false,
          url: 'https://api.github.com/repos/suo/actions-test',
          forks_url: 'https://api.github.com/repos/suo/actions-test/forks',
          keys_url: 'https://api.github.com/repos/suo/actions-test/keys{/key_id}',
          collaborators_url: 'https://api.github.com/repos/suo/actions-test/collaborators{/collaborator}',
          teams_url: 'https://api.github.com/repos/suo/actions-test/teams',
          hooks_url: 'https://api.github.com/repos/suo/actions-test/hooks',
          issue_events_url: 'https://api.github.com/repos/suo/actions-test/issues/events{/number}',
          events_url: 'https://api.github.com/repos/suo/actions-test/events',
          assignees_url: 'https://api.github.com/repos/suo/actions-test/assignees{/user}',
          branches_url: 'https://api.github.com/repos/suo/actions-test/branches{/branch}',
          tags_url: 'https://api.github.com/repos/suo/actions-test/tags',
          blobs_url: 'https://api.github.com/repos/suo/actions-test/git/blobs{/sha}',
          git_tags_url: 'https://api.github.com/repos/suo/actions-test/git/tags{/sha}',
          git_refs_url: 'https://api.github.com/repos/suo/actions-test/git/refs{/sha}',
          trees_url: 'https://api.github.com/repos/suo/actions-test/git/trees{/sha}',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/{sha}',
          languages_url: 'https://api.github.com/repos/suo/actions-test/languages',
          stargazers_url: 'https://api.github.com/repos/suo/actions-test/stargazers',
          contributors_url: 'https://api.github.com/repos/suo/actions-test/contributors',
          subscribers_url: 'https://api.github.com/repos/suo/actions-test/subscribers',
          subscription_url: 'https://api.github.com/repos/suo/actions-test/subscription',
          commits_url: 'https://api.github.com/repos/suo/actions-test/commits{/sha}',
          git_commits_url: 'https://api.github.com/repos/suo/actions-test/git/commits{/sha}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/comments{/number}',
          issue_comment_url: 'https://api.github.com/repos/suo/actions-test/issues/comments{/number}',
          contents_url: 'https://api.github.com/repos/suo/actions-test/contents/{+path}',
          compare_url: 'https://api.github.com/repos/suo/actions-test/compare/{base}...{head}',
          merges_url: 'https://api.github.com/repos/suo/actions-test/merges',
          archive_url: 'https://api.github.com/repos/suo/actions-test/{archive_format}{/ref}',
          downloads_url: 'https://api.github.com/repos/suo/actions-test/downloads',
          issues_url: 'https://api.github.com/repos/suo/actions-test/issues{/number}',
          pulls_url: 'https://api.github.com/repos/suo/actions-test/pulls{/number}',
          milestones_url: 'https://api.github.com/repos/suo/actions-test/milestones{/number}',
          notifications_url: 'https://api.github.com/repos/suo/actions-test/notifications{?since,all,participating}',
          labels_url: 'https://api.github.com/repos/suo/actions-test/labels{/name}',
          releases_url: 'https://api.github.com/repos/suo/actions-test/releases{/id}',
          deployments_url: 'https://api.github.com/repos/suo/actions-test/deployments',
          created_at: '2021-12-19T08:58:01Z',
          updated_at: '2021-12-23T06:00:10Z',
          pushed_at: '2021-12-23T06:00:07Z',
          git_url: 'git://github.com/suo/actions-test.git',
          ssh_url: 'git@github.com:suo/actions-test.git',
          clone_url: 'https://github.com/suo/actions-test.git',
          svn_url: 'https://github.com/suo/actions-test',
          homepage: null,
          size: 4,
          stargazers_count: 0,
          watchers_count: 0,
          language: 'Python',
          has_issues: true,
          has_projects: true,
          has_downloads: true,
          has_wiki: true,
          has_pages: false,
          forks_count: 1,
          mirror_url: null,
          archived: false,
          disabled: false,
          open_issues_count: 4,
          license: null,
          allow_forking: true,
          is_template: false,
          topics: [],
          visibility: 'public',
          forks: 1,
          open_issues: 4,
          watchers: 0,
          default_branch: 'main'
        },
        sender: {
          login: 'suo',
          id: 1617424,
          node_id: 'MDQ6VXNlcjE2MTc0MjQ=',
          avatar_url: 'https://avatars.githubusercontent.com/u/1617424?v=4',
          gravatar_id: '',
          url: 'https://api.github.com/users/suo',
          html_url: 'https://github.com/suo',
          followers_url: 'https://api.github.com/users/suo/followers',
          following_url: 'https://api.github.com/users/suo/following{/other_user}',
          gists_url: 'https://api.github.com/users/suo/gists{/gist_id}',
          starred_url: 'https://api.github.com/users/suo/starred{/owner}{/repo}',
          subscriptions_url: 'https://api.github.com/users/suo/subscriptions',
          organizations_url: 'https://api.github.com/users/suo/orgs',
          repos_url: 'https://api.github.com/users/suo/repos',
          events_url: 'https://api.github.com/users/suo/events{/privacy}',
          received_events_url: 'https://api.github.com/users/suo/received_events',
          type: 'User',
          site_admin: false
        }
      },
      octokit: OctokitWithDefaults {
        request: [Function: newApi] {
          endpoint: [Function],
          defaults: [Function: bound withDefaults]
        },
        graphql: [Function: newApi] {
          defaults: [Function: bound withDefaults],
          endpoint: [Function]
        },
        log: {
          debug: [Function: bound noop],
          info: [Function: bound LOG],
          warn: [Function: bound LOG],
          error: [Function: bound LOG],
          trace: [Function: bound noop],
          fatal: [Function: bound ],
          levels: [Object],
          silent: [Function: bound noop],
          constructor: [Function: bound Pino],
          child: [Function: bound child],
          bindings: [Function: bound bindings],
          setBindings: [Function: bound setBindings],
          flush: [Function: bound flush],
          isLevelEnabled: [Function: bound isLevelEnabled],
          version: '6.14.0',
          level: 'info',
          levelVal: 30,
          _events: undefined,
          _eventsCount: 0,
          _maxListeners: undefined,
          setMaxListeners: [Function: bound setMaxListeners],
          getMaxListeners: [Function: bound getMaxListeners],
          emit: [Function: bound emit],
          addListener: [Function: bound addListener],
          on: [Function: bound addListener],
          prependListener: [Function: bound prependListener],
          once: [Function: bound once],
          prependOnceListener: [Function: bound prependOnceListener],
          removeListener: [Function: bound removeListener],
          off: [Function: bound removeListener],
          removeAllListeners: [Function: bound removeAllListeners],
          listeners: [Function: bound listeners],
          rawListeners: [Function: bound rawListeners],
          listenerCount: [Function: bound listenerCount],
          eventNames: [Function: bound eventNames]
        },
        hook: [Function: bound register] {
          api: [Object],
          remove: [Function: bound removeHook],
          before: [Function: bound addHook],
          error: [Function: bound addHook],
          after: [Function: bound addHook],
          wrap: [Function: bound addHook]
        },
        auth: [Function: bound auth] AsyncFunction {
          hook: [Function: bound hook] AsyncFunction
        },
        retry: { retryRequest: [Function: retryRequest] },
        paginate: [Function: bound paginate] { iterator: [Function: bound iterator] },
        actions: {
          addCustomLabelsToSelfHostedRunnerForOrg: [Function],
          addCustomLabelsToSelfHostedRunnerForRepo: [Function],
          addSelectedRepoToOrgSecret: [Function],
          approveWorkflowRun: [Function],
          cancelWorkflowRun: [Function],
          createOrUpdateEnvironmentSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          createRegistrationTokenForOrg: [Function],
          createRegistrationTokenForRepo: [Function],
          createRemoveTokenForOrg: [Function],
          createRemoveTokenForRepo: [Function],
          createWorkflowDispatch: [Function],
          deleteActionsCacheById: [Function],
          deleteActionsCacheByKey: [Function],
          deleteArtifact: [Function],
          deleteEnvironmentSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          deleteSelfHostedRunnerFromOrg: [Function],
          deleteSelfHostedRunnerFromRepo: [Function],
          deleteWorkflowRun: [Function],
          deleteWorkflowRunLogs: [Function],
          disableSelectedRepositoryGithubActionsOrganization: [Function],
          disableWorkflow: [Function],
          downloadArtifact: [Function],
          downloadJobLogsForWorkflowRun: [Function],
          downloadWorkflowRunAttemptLogs: [Function],
          downloadWorkflowRunLogs: [Function],
          enableSelectedRepositoryGithubActionsOrganization: [Function],
          enableWorkflow: [Function],
          getActionsCacheList: [Function],
          getActionsCacheUsage: [Function],
          getActionsCacheUsageByRepoForOrg: [Function],
          getActionsCacheUsageForEnterprise: [Function],
          getActionsCacheUsageForOrg: [Function],
          getAllowedActionsOrganization: [Function],
          getAllowedActionsRepository: [Function],
          getArtifact: [Function],
          getEnvironmentPublicKey: [Function],
          getEnvironmentSecret: [Function],
          getGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          getGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          getGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          getGithubActionsPermissionsOrganization: [Function],
          getGithubActionsPermissionsRepository: [Function],
          getJobForWorkflowRun: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getPendingDeploymentsForRun: [Function],
          getRepoPermissions: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getReviewsForRun: [Function],
          getSelfHostedRunnerForOrg: [Function],
          getSelfHostedRunnerForRepo: [Function],
          getWorkflow: [Function],
          getWorkflowAccessToRepository: [Function],
          getWorkflowRun: [Function],
          getWorkflowRunAttempt: [Function],
          getWorkflowRunUsage: [Function],
          getWorkflowUsage: [Function],
          listArtifactsForRepo: [Function],
          listEnvironmentSecrets: [Function],
          listJobsForWorkflowRun: [Function],
          listJobsForWorkflowRunAttempt: [Function],
          listLabelsForSelfHostedRunnerForOrg: [Function],
          listLabelsForSelfHostedRunnerForRepo: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listRepoWorkflows: [Function],
          listRunnerApplicationsForOrg: [Function],
          listRunnerApplicationsForRepo: [Function],
          listSelectedReposForOrgSecret: [Function],
          listSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          listSelfHostedRunnersForOrg: [Function],
          listSelfHostedRunnersForRepo: [Function],
          listWorkflowRunArtifacts: [Function],
          listWorkflowRuns: [Function],
          listWorkflowRunsForRepo: [Function],
          reRunJobForWorkflowRun: [Function],
          reRunWorkflow: [Function],
          reRunWorkflowFailedJobs: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForOrg: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForRepo: [Function],
          removeCustomLabelFromSelfHostedRunnerForOrg: [Function],
          removeCustomLabelFromSelfHostedRunnerForRepo: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          reviewPendingDeploymentsForRun: [Function],
          setAllowedActionsOrganization: [Function],
          setAllowedActionsRepository: [Function],
          setCustomLabelsForSelfHostedRunnerForOrg: [Function],
          setCustomLabelsForSelfHostedRunnerForRepo: [Function],
          setGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          setGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          setGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          setGithubActionsPermissionsOrganization: [Function],
          setGithubActionsPermissionsRepository: [Function],
          setSelectedReposForOrgSecret: [Function],
          setSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          setWorkflowAccessToRepository: [Function]
        },
        activity: {
          checkRepoIsStarredByAuthenticatedUser: [Function],
          deleteRepoSubscription: [Function],
          deleteThreadSubscription: [Function],
          getFeeds: [Function],
          getRepoSubscription: [Function],
          getThread: [Function],
          getThreadSubscriptionForAuthenticatedUser: [Function],
          listEventsForAuthenticatedUser: [Function],
          listNotificationsForAuthenticatedUser: [Function],
          listOrgEventsForAuthenticatedUser: [Function],
          listPublicEvents: [Function],
          listPublicEventsForRepoNetwork: [Function],
          listPublicEventsForUser: [Function],
          listPublicOrgEvents: [Function],
          listReceivedEventsForUser: [Function],
          listReceivedPublicEventsForUser: [Function],
          listRepoEvents: [Function],
          listRepoNotificationsForAuthenticatedUser: [Function],
          listReposStarredByAuthenticatedUser: [Function],
          listReposStarredByUser: [Function],
          listReposWatchedByUser: [Function],
          listStargazersForRepo: [Function],
          listWatchedReposForAuthenticatedUser: [Function],
          listWatchersForRepo: [Function],
          markNotificationsAsRead: [Function],
          markRepoNotificationsAsRead: [Function],
          markThreadAsRead: [Function],
          setRepoSubscription: [Function],
          setThreadSubscription: [Function],
          starRepoForAuthenticatedUser: [Function],
          unstarRepoForAuthenticatedUser: [Function]
        },
        apps: {
          addRepoToInstallation: [Function],
          addRepoToInstallationForAuthenticatedUser: [Function],
          checkToken: [Function],
          createFromManifest: [Function],
          createInstallationAccessToken: [Function],
          deleteAuthorization: [Function],
          deleteInstallation: [Function],
          deleteToken: [Function],
          getAuthenticated: [Function],
          getBySlug: [Function],
          getInstallation: [Function],
          getOrgInstallation: [Function],
          getRepoInstallation: [Function],
          getSubscriptionPlanForAccount: [Function],
          getSubscriptionPlanForAccountStubbed: [Function],
          getUserInstallation: [Function],
          getWebhookConfigForApp: [Function],
          getWebhookDelivery: [Function],
          listAccountsForPlan: [Function],
          listAccountsForPlanStubbed: [Function],
          listInstallationReposForAuthenticatedUser: [Function],
          listInstallations: [Function],
          listInstallationsForAuthenticatedUser: [Function],
          listPlans: [Function],
          listPlansStubbed: [Function],
          listReposAccessibleToInstallation: [Function],
          listSubscriptionsForAuthenticatedUser: [Function],
          listSubscriptionsForAuthenticatedUserStubbed: [Function],
          listWebhookDeliveries: [Function],
          redeliverWebhookDelivery: [Function],
          removeRepoFromInstallation: [Function],
          removeRepoFromInstallationForAuthenticatedUser: [Function],
          resetToken: [Function],
          revokeInstallationAccessToken: [Function],
          scopeToken: [Function],
          suspendInstallation: [Function],
          unsuspendInstallation: [Function],
          updateWebhookConfigForApp: [Function]
        },
        billing: {
          getGithubActionsBillingOrg: [Function],
          getGithubActionsBillingUser: [Function],
          getGithubAdvancedSecurityBillingGhe: [Function],
          getGithubAdvancedSecurityBillingOrg: [Function],
          getGithubPackagesBillingOrg: [Function],
          getGithubPackagesBillingUser: [Function],
          getSharedStorageBillingOrg: [Function],
          getSharedStorageBillingUser: [Function]
        },
        checks: {
          create: [Function],
          createSuite: [Function],
          get: [Function],
          getSuite: [Function],
          listAnnotations: [Function],
          listForRef: [Function],
          listForSuite: [Function],
          listSuitesForRef: [Function],
          rerequestRun: [Function],
          rerequestSuite: [Function],
          setSuitesPreferences: [Function],
          update: [Function]
        },
        codeScanning: {
          deleteAnalysis: [Function],
          getAlert: [Function],
          getAnalysis: [Function],
          getSarif: [Function],
          listAlertInstances: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listAlertsInstances: [Function],
          listRecentAnalyses: [Function],
          updateAlert: [Function],
          uploadSarif: [Function]
        },
        codesOfConduct: { getAllCodesOfConduct: [Function], getConductCode: [Function] },
        codespaces: {
          addRepositoryForSecretForAuthenticatedUser: [Function],
          codespaceMachinesForAuthenticatedUser: [Function],
          createForAuthenticatedUser: [Function],
          createOrUpdateRepoSecret: [Function],
          createOrUpdateSecretForAuthenticatedUser: [Function],
          createWithPrForAuthenticatedUser: [Function],
          createWithRepoForAuthenticatedUser: [Function],
          deleteForAuthenticatedUser: [Function],
          deleteFromOrganization: [Function],
          deleteRepoSecret: [Function],
          deleteSecretForAuthenticatedUser: [Function],
          exportForAuthenticatedUser: [Function],
          getExportDetailsForAuthenticatedUser: [Function],
          getForAuthenticatedUser: [Function],
          getPublicKeyForAuthenticatedUser: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getSecretForAuthenticatedUser: [Function],
          listDevcontainersInRepositoryForAuthenticatedUser: [Function],
          listForAuthenticatedUser: [Function],
          listInOrganization: [Function],
          listInRepositoryForAuthenticatedUser: [Function],
          listRepoSecrets: [Function],
          listRepositoriesForSecretForAuthenticatedUser: [Function],
          listSecretsForAuthenticatedUser: [Function],
          removeRepositoryForSecretForAuthenticatedUser: [Function],
          repoMachinesForAuthenticatedUser: [Function],
          setRepositoriesForSecretForAuthenticatedUser: [Function],
          startForAuthenticatedUser: [Function],
          stopForAuthenticatedUser: [Function],
          stopInOrganization: [Function],
          updateForAuthenticatedUser: [Function]
        },
        dependabot: {
          addSelectedRepoToOrgSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listSelectedReposForOrgSecret: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          setSelectedReposForOrgSecret: [Function]
        },
        dependencyGraph: { createRepositorySnapshot: [Function], diffRange: [Function] },
        emojis: { get: [Function] },
        enterpriseAdmin: {
          addCustomLabelsToSelfHostedRunnerForEnterprise: [Function],
          disableSelectedOrganizationGithubActionsEnterprise: [Function],
          enableSelectedOrganizationGithubActionsEnterprise: [Function],
          getAllowedActionsEnterprise: [Function],
          getGithubActionsPermissionsEnterprise: [Function],
          getServerStatistics: [Function],
          listLabelsForSelfHostedRunnerForEnterprise: [Function],
          listSelectedOrganizationsEnabledGithubActionsEnterprise: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [Function],
          removeCustomLabelFromSelfHostedRunnerForEnterprise: [Function],
          setAllowedActionsEnterprise: [Function],
          setCustomLabelsForSelfHostedRunnerForEnterprise: [Function],
          setGithubActionsPermissionsEnterprise: [Function],
          setSelectedOrganizationsEnabledGithubActionsEnterprise: [Function]
        },
        gists: {
          checkIsStarred: [Function],
          create: [Function],
          createComment: [Function],
          delete: [Function],
          deleteComment: [Function],
          fork: [Function],
          get: [Function],
          getComment: [Function],
          getRevision: [Function],
          list: [Function],
          listComments: [Function],
          listCommits: [Function],
          listForUser: [Function],
          listForks: [Function],
          listPublic: [Function],
          listStarred: [Function],
          star: [Function],
          unstar: [Function],
          update: [Function],
          updateComment: [Function]
        },
        git: {
          createBlob: [Function],
          createCommit: [Function],
          createRef: [Function],
          createTag: [Function],
          createTree: [Function],
          deleteRef: [Function],
          getBlob: [Function],
          getCommit: [Function],
          getRef: [Function],
          getTag: [Function],
          getTree: [Function],
          listMatchingRefs: [Function],
          updateRef: [Function]
        },
        gitignore: { getAllTemplates: [Function], getTemplate: [Function] },
        interactions: {
          getRestrictionsForAuthenticatedUser: [Function],
          getRestrictionsForOrg: [Function],
          getRestrictionsForRepo: [Function],
          getRestrictionsForYourPublicRepos: [Function],
          removeRestrictionsForAuthenticatedUser: [Function],
          removeRestrictionsForOrg: [Function],
          removeRestrictionsForRepo: [Function],
          removeRestrictionsForYourPublicRepos: [Function],
          setRestrictionsForAuthenticatedUser: [Function],
          setRestrictionsForOrg: [Function],
          setRestrictionsForRepo: [Function],
          setRestrictionsForYourPublicRepos: [Function]
        },
        issues: {
          addAssignees: [Function],
          addLabels: [Function],
          checkUserCanBeAssigned: [Function],
          create: [Function],
          createComment: [Function],
          createLabel: [Function],
          createMilestone: [Function],
          deleteComment: [Function],
          deleteLabel: [Function],
          deleteMilestone: [Function],
          get: [Function],
          getComment: [Function],
          getEvent: [Function],
          getLabel: [Function],
          getMilestone: [Function],
          list: [Function],
          listAssignees: [Function],
          listComments: [Function],
          listCommentsForRepo: [Function],
          listEvents: [Function],
          listEventsForRepo: [Function],
          listEventsForTimeline: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listLabelsForMilestone: [Function],
          listLabelsForRepo: [Function],
          listLabelsOnIssue: [Function],
          listMilestones: [Function],
          lock: [Function],
          removeAllLabels: [Function],
          removeAssignees: [Function],
          removeLabel: [Function],
          setLabels: [Function],
          unlock: [Function],
          update: [Function],
          updateComment: [Function],
          updateLabel: [Function],
          updateMilestone: [Function]
        },
        licenses: {
          get: [Function],
          getAllCommonlyUsed: [Function],
          getForRepo: [Function]
        },
        markdown: { render: [Function], renderRaw: [Function] },
        meta: {
          get: [Function],
          getOctocat: [Function],
          getZen: [Function],
          root: [Function]
        },
        migrations: {
          cancelImport: [Function],
          deleteArchiveForAuthenticatedUser: [Function],
          deleteArchiveForOrg: [Function],
          downloadArchiveForOrg: [Function],
          getArchiveForAuthenticatedUser: [Function],
          getCommitAuthors: [Function],
          getImportStatus: [Function],
          getLargeFiles: [Function],
          getStatusForAuthenticatedUser: [Function],
          getStatusForOrg: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listReposForAuthenticatedUser: [Function],
          listReposForOrg: [Function],
          listReposForUser: [Function],
          mapCommitAuthor: [Function],
          setLfsPreference: [Function],
          startForAuthenticatedUser: [Function],
          startForOrg: [Function],
          startImport: [Function],
          unlockRepoForAuthenticatedUser: [Function],
          unlockRepoForOrg: [Function],
          updateImport: [Function]
        },
        orgs: {
          blockUser: [Function],
          cancelInvitation: [Function],
          checkBlockedUser: [Function],
          checkMembershipForUser: [Function],
          checkPublicMembershipForUser: [Function],
          convertMemberToOutsideCollaborator: [Function],
          createInvitation: [Function],
          createWebhook: [Function],
          deleteWebhook: [Function],
          get: [Function],
          getMembershipForAuthenticatedUser: [Function],
          getMembershipForUser: [Function],
          getWebhook: [Function],
          getWebhookConfigForOrg: [Function],
          getWebhookDelivery: [Function],
          list: [Function],
          listAppInstallations: [Function],
          listBlockedUsers: [Function],
          listCustomRoles: [Function],
          listFailedInvitations: [Function],
          listForAuthenticatedUser: [Function],
          listForUser: [Function],
          listInvitationTeams: [Function],
          listMembers: [Function],
          listMembershipsForAuthenticatedUser: [Function],
          listOutsideCollaborators: [Function],
          listPendingInvitations: [Function],
          listPublicMembers: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeMember: [Function],
          removeMembershipForUser: [Function],
          removeOutsideCollaborator: [Function],
          removePublicMembershipForAuthenticatedUser: [Function],
          setMembershipForUser: [Function],
          setPublicMembershipForAuthenticatedUser: [Function],
          unblockUser: [Function],
          update: [Function],
          updateMembershipForAuthenticatedUser: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForOrg: [Function]
        },
        packages: {
          deletePackageForAuthenticatedUser: [Function],
          deletePackageForOrg: [Function],
          deletePackageForUser: [Function],
          deletePackageVersionForAuthenticatedUser: [Function],
          deletePackageVersionForOrg: [Function],
          deletePackageVersionForUser: [Function],
          getAllPackageVersionsForAPackageOwnedByAnOrg: [Function],
          getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByOrg: [Function],
          getAllPackageVersionsForPackageOwnedByUser: [Function],
          getPackageForAuthenticatedUser: [Function],
          getPackageForOrganization: [Function],
          getPackageForUser: [Function],
          getPackageVersionForAuthenticatedUser: [Function],
          getPackageVersionForOrganization: [Function],
          getPackageVersionForUser: [Function],
          listPackagesForAuthenticatedUser: [Function],
          listPackagesForOrganization: [Function],
          listPackagesForUser: [Function],
          restorePackageForAuthenticatedUser: [Function],
          restorePackageForOrg: [Function],
          restorePackageForUser: [Function],
          restorePackageVersionForAuthenticatedUser: [Function],
          restorePackageVersionForOrg: [Function],
          restorePackageVersionForUser: [Function]
        },
        projects: {
          addCollaborator: [Function],
          createCard: [Function],
          createColumn: [Function],
          createForAuthenticatedUser: [Function],
          createForOrg: [Function],
          createForRepo: [Function],
          delete: [Function],
          deleteCard: [Function],
          deleteColumn: [Function],
          get: [Function],
          getCard: [Function],
          getColumn: [Function],
          getPermissionForUser: [Function],
          listCards: [Function],
          listCollaborators: [Function],
          listColumns: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listForUser: [Function],
          moveCard: [Function],
          moveColumn: [Function],
          removeCollaborator: [Function],
          update: [Function],
          updateCard: [Function],
          updateColumn: [Function]
        },
        pulls: {
          checkIfMerged: [Function],
          create: [Function],
          createReplyForReviewComment: [Function],
          createReview: [Function],
          createReviewComment: [Function],
          deletePendingReview: [Function],
          deleteReviewComment: [Function],
          dismissReview: [Function],
          get: [Function],
          getReview: [Function],
          getReviewComment: [Function],
          list: [Function],
          listCommentsForReview: [Function],
          listCommits: [Function],
          listFiles: [Function],
          listRequestedReviewers: [Function],
          listReviewComments: [Function],
          listReviewCommentsForRepo: [Function],
          listReviews: [Function],
          merge: [Function],
          removeRequestedReviewers: [Function],
          requestReviewers: [Function],
          submitReview: [Function],
          update: [Function],
          updateBranch: [Function],
          updateReview: [Function],
          updateReviewComment: [Function]
        },
        rateLimit: { get: [Function] },
        reactions: {
          createForCommitComment: [Function],
          createForIssue: [Function],
          createForIssueComment: [Function],
          createForPullRequestReviewComment: [Function],
          createForRelease: [Function],
          createForTeamDiscussionCommentInOrg: [Function],
          createForTeamDiscussionInOrg: [Function],
          deleteForCommitComment: [Function],
          deleteForIssue: [Function],
          deleteForIssueComment: [Function],
          deleteForPullRequestComment: [Function],
          deleteForRelease: [Function],
          deleteForTeamDiscussion: [Function],
          deleteForTeamDiscussionComment: [Function],
          listForCommitComment: [Function],
          listForIssue: [Function],
          listForIssueComment: [Function],
          listForPullRequestReviewComment: [Function],
          listForRelease: [Function],
          listForTeamDiscussionCommentInOrg: [Function],
          listForTeamDiscussionInOrg: [Function]
        },
        repos: {
          acceptInvitation: [Function],
          acceptInvitationForAuthenticatedUser: [Function],
          addAppAccessRestrictions: [Function],
          addCollaborator: [Function],
          addStatusCheckContexts: [Function],
          addTeamAccessRestrictions: [Function],
          addUserAccessRestrictions: [Function],
          checkCollaborator: [Function],
          checkVulnerabilityAlerts: [Function],
          codeownersErrors: [Function],
          compareCommits: [Function],
          compareCommitsWithBasehead: [Function],
          createAutolink: [Function],
          createCommitComment: [Function],
          createCommitSignatureProtection: [Function],
          createCommitStatus: [Function],
          createDeployKey: [Function],
          createDeployment: [Function],
          createDeploymentStatus: [Function],
          createDispatchEvent: [Function],
          createForAuthenticatedUser: [Function],
          createFork: [Function],
          createInOrg: [Function],
          createOrUpdateEnvironment: [Function],
          createOrUpdateFileContents: [Function],
          createPagesSite: [Function],
          createRelease: [Function],
          createTagProtection: [Function],
          createUsingTemplate: [Function],
          createWebhook: [Function],
          declineInvitation: [Function],
          declineInvitationForAuthenticatedUser: [Function],
          delete: [Function],
          deleteAccessRestrictions: [Function],
          deleteAdminBranchProtection: [Function],
          deleteAnEnvironment: [Function],
          deleteAutolink: [Function],
          deleteBranchProtection: [Function],
          deleteCommitComment: [Function],
          deleteCommitSignatureProtection: [Function],
          deleteDeployKey: [Function],
          deleteDeployment: [Function],
          deleteFile: [Function],
          deleteInvitation: [Function],
          deletePagesSite: [Function],
          deletePullRequestReviewProtection: [Function],
          deleteRelease: [Function],
          deleteReleaseAsset: [Function],
          deleteTagProtection: [Function],
          deleteWebhook: [Function],
          disableAutomatedSecurityFixes: [Function],
          disableLfsForRepo: [Function],
          disableVulnerabilityAlerts: [Function],
          downloadArchive: [Function],
          downloadTarballArchive: [Function],
          downloadZipballArchive: [Function],
          enableAutomatedSecurityFixes: [Function],
          enableLfsForRepo: [Function],
          enableVulnerabilityAlerts: [Function],
          generateReleaseNotes: [Function],
          get: [Function],
          getAccessRestrictions: [Function],
          getAdminBranchProtection: [Function],
          getAllEnvironments: [Function],
          getAllStatusCheckContexts: [Function],
          getAllTopics: [Function],
          getAppsWithAccessToProtectedBranch: [Function],
          getAutolink: [Function],
          getBranch: [Function],
          getBranchProtection: [Function],
          getClones: [Function],
          getCodeFrequencyStats: [Function],
          getCollaboratorPermissionLevel: [Function],
          getCombinedStatusForRef: [Function],
          getCommit: [Function],
          getCommitActivityStats: [Function],
          getCommitComment: [Function],
          getCommitSignatureProtection: [Function],
          getCommunityProfileMetrics: [Function],
          getContent: [Function],
          getContributorsStats: [Function],
          getDeployKey: [Function],
          getDeployment: [Function],
          getDeploymentStatus: [Function],
          getEnvironment: [Function],
          getLatestPagesBuild: [Function],
          getLatestRelease: [Function],
          getPages: [Function],
          getPagesBuild: [Function],
          getPagesHealthCheck: [Function],
          getParticipationStats: [Function],
          getPullRequestReviewProtection: [Function],
          getPunchCardStats: [Function],
          getReadme: [Function],
          getReadmeInDirectory: [Function],
          getRelease: [Function],
          getReleaseAsset: [Function],
          getReleaseByTag: [Function],
          getStatusChecksProtection: [Function],
          getTeamsWithAccessToProtectedBranch: [Function],
          getTopPaths: [Function],
          getTopReferrers: [Function],
          getUsersWithAccessToProtectedBranch: [Function],
          getViews: [Function],
          getWebhook: [Function],
          getWebhookConfigForRepo: [Function],
          getWebhookDelivery: [Function],
          listAutolinks: [Function],
          listBranches: [Function],
          listBranchesForHeadCommit: [Function],
          listCollaborators: [Function],
          listCommentsForCommit: [Function],
          listCommitCommentsForRepo: [Function],
          listCommitStatusesForRef: [Function],
          listCommits: [Function],
          listContributors: [Function],
          listDeployKeys: [Function],
          listDeploymentStatuses: [Function],
          listDeployments: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForUser: [Function],
          listForks: [Function],
          listInvitations: [Function],
          listInvitationsForAuthenticatedUser: [Function],
          listLanguages: [Function],
          listPagesBuilds: [Function],
          listPublic: [Function],
          listPullRequestsAssociatedWithCommit: [Function],
          listReleaseAssets: [Function],
          listReleases: [Function],
          listTagProtection: [Function],
          listTags: [Function],
          listTeams: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          merge: [Function],
          mergeUpstream: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeAppAccessRestrictions: [Function],
          removeCollaborator: [Function],
          removeStatusCheckContexts: [Function],
          removeStatusCheckProtection: [Function],
          removeTeamAccessRestrictions: [Function],
          removeUserAccessRestrictions: [Function],
          renameBranch: [Function],
          replaceAllTopics: [Function],
          requestPagesBuild: [Function],
          setAdminBranchProtection: [Function],
          setAppAccessRestrictions: [Function],
          setStatusCheckContexts: [Function],
          setTeamAccessRestrictions: [Function],
          setUserAccessRestrictions: [Function],
          testPushWebhook: [Function],
          transfer: [Function],
          update: [Function],
          updateBranchProtection: [Function],
          updateCommitComment: [Function],
          updateInformationAboutPagesSite: [Function],
          updateInvitation: [Function],
          updatePullRequestReviewProtection: [Function],
          updateRelease: [Function],
          updateReleaseAsset: [Function],
          updateStatusCheckPotection: [Function],
          updateStatusCheckProtection: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForRepo: [Function],
          uploadReleaseAsset: [Function]
        },
        search: {
          code: [Function],
          commits: [Function],
          issuesAndPullRequests: [Function],
          labels: [Function],
          repos: [Function],
          topics: [Function],
          users: [Function]
        },
        secretScanning: {
          getAlert: [Function],
          listAlertsForEnterprise: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listLocationsForAlert: [Function],
          updateAlert: [Function]
        },
        teams: {
          addOrUpdateMembershipForUserInOrg: [Function],
          addOrUpdateProjectPermissionsInOrg: [Function],
          addOrUpdateRepoPermissionsInOrg: [Function],
          checkPermissionsForProjectInOrg: [Function],
          checkPermissionsForRepoInOrg: [Function],
          create: [Function],
          createDiscussionCommentInOrg: [Function],
          createDiscussionInOrg: [Function],
          deleteDiscussionCommentInOrg: [Function],
          deleteDiscussionInOrg: [Function],
          deleteInOrg: [Function],
          getByName: [Function],
          getDiscussionCommentInOrg: [Function],
          getDiscussionInOrg: [Function],
          getMembershipForUserInOrg: [Function],
          list: [Function],
          listChildInOrg: [Function],
          listDiscussionCommentsInOrg: [Function],
          listDiscussionsInOrg: [Function],
          listForAuthenticatedUser: [Function],
          listMembersInOrg: [Function],
          listPendingInvitationsInOrg: [Function],
          listProjectsInOrg: [Function],
          listReposInOrg: [Function],
          removeMembershipForUserInOrg: [Function],
          removeProjectInOrg: [Function],
          removeRepoInOrg: [Function],
          updateDiscussionCommentInOrg: [Function],
          updateDiscussionInOrg: [Function],
          updateInOrg: [Function]
        },
        users: {
          addEmailForAuthenticated: [Function],
          addEmailForAuthenticatedUser: [Function],
          block: [Function],
          checkBlocked: [Function],
          checkFollowingForUser: [Function],
          checkPersonIsFollowedByAuthenticated: [Function],
          createGpgKeyForAuthenticated: [Function],
          createGpgKeyForAuthenticatedUser: [Function],
          createPublicSshKeyForAuthenticated: [Function],
          createPublicSshKeyForAuthenticatedUser: [Function],
          deleteEmailForAuthenticated: [Function],
          deleteEmailForAuthenticatedUser: [Function],
          deleteGpgKeyForAuthenticated: [Function],
          deleteGpgKeyForAuthenticatedUser: [Function],
          deletePublicSshKeyForAuthenticated: [Function],
          deletePublicSshKeyForAuthenticatedUser: [Function],
          follow: [Function],
          getAuthenticated: [Function],
          getByUsername: [Function],
          getContextForUser: [Function],
          getGpgKeyForAuthenticated: [Function],
          getGpgKeyForAuthenticatedUser: [Function],
          getPublicSshKeyForAuthenticated: [Function],
          getPublicSshKeyForAuthenticatedUser: [Function],
          list: [Function],
          listBlockedByAuthenticated: [Function],
          listBlockedByAuthenticatedUser: [Function],
          listEmailsForAuthenticated: [Function],
          listEmailsForAuthenticatedUser: [Function],
          listFollowedByAuthenticated: [Function],
          listFollowedByAuthenticatedUser: [Function],
          listFollowersForAuthenticatedUser: [Function],
          listFollowersForUser: [Function],
          listFollowingForUser: [Function],
          listGpgKeysForAuthenticated: [Function],
          listGpgKeysForAuthenticatedUser: [Function],
          listGpgKeysForUser: [Function],
          listPublicEmailsForAuthenticated: [Function],
          listPublicEmailsForAuthenticatedUser: [Function],
          listPublicKeysForUser: [Function],
          listPublicSshKeysForAuthenticated: [Function],
          listPublicSshKeysForAuthenticatedUser: [Function],
          setPrimaryEmailVisibilityForAuthenticated: [Function],
          setPrimaryEmailVisibilityForAuthenticatedUser: [Function],
          unblock: [Function],
          unfollow: [Function],
          updateAuthenticated: [Function]
        },
        rest: {
          actions: [Object],
          activity: [Object],
          apps: [Object],
          billing: [Object],
          checks: [Object],
          codeScanning: [Object],
          codesOfConduct: [Object],
          codespaces: [Object],
          dependabot: [Object],
          dependencyGraph: [Object],
          emojis: [Object],
          enterpriseAdmin: [Object],
          gists: [Object],
          git: [Object],
          gitignore: [Object],
          interactions: [Object],
          issues: [Object],
          licenses: [Object],
          markdown: [Object],
          meta: [Object],
          migrations: [Object],
          orgs: [Object],
          packages: [Object],
          projects: [Object],
          pulls: [Object],
          rateLimit: [Object],
          reactions: [Object],
          repos: [Object],
          search: [Object],
          secretScanning: [Object],
          teams: [Object],
          users: [Object]
        },
        config: { get: [AsyncFunction: get] }
      },
      log: [Function: logInfo] {
        trace: [Function: bound noop],
        debug: [Function: bound noop],
        info: [Function: bound LOG],
        warn: [Function: bound LOG],
        error: [Function: bound LOG],
        fatal: [Function: bound ],
        levels: { labels: [Object], values: [Object] },
        silent: [Function: bound noop],
        constructor: [Function: bound Pino],
        child: [Function: bound child],
        bindings: [Function: bound bindings],
        setBindings: [Function: bound setBindings],
        flush: [Function: bound flush],
        isLevelEnabled: [Function: bound isLevelEnabled],
        version: '6.14.0',
        level: 'info',
        levelVal: 30,
        _events: undefined,
        _eventsCount: 0,
        _maxListeners: undefined,
        setMaxListeners: [Function: bound setMaxListeners],
        getMaxListeners: [Function: bound getMaxListeners],
        emit: [Function: bound emit],
        addListener: [Function: bound addListener],
        on: [Function: bound addListener],
        prependListener: [Function: bound prependListener],
        once: [Function: bound once],
        prependOnceListener: [Function: bound prependOnceListener],
        removeListener: [Function: bound removeListener],
        off: [Function: bound removeListener],
        removeAllListeners: [Function: bound removeAllListeners],
        listeners: [Function: bound listeners],
        rawListeners: [Function: bound rawListeners],
        listenerCount: [Function: bound listenerCount],
        eventNames: [Function: bound eventNames]
      }
    }

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:146:11)
          at async Promise.all (index 0)

INFO (event): Synchronizing tag ciflow/trunk/5 to head sha 600835c72e2462ea095cf19f1fabe39488dd0d53
    id: "123"
INFO (event): No matching tags
    id: "123"
INFO (event): Creating tag ciflow/trunk/5 on head sha 600835c72e2462ea095cf19f1fabe39488dd0d53
    id: "123"
  console.log
    context is

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:145:11)
          at async Promise.all (index 0)

  console.log
    Context {
      name: 'pull_request',
      id: '123',
      payload: {
        action: 'labeled',
        number: 5,
        pull_request: {
          url: 'https://api.github.com/repos/suo/actions-test/pulls/5',
          id: 807065505,
          node_id: 'PR_kwDOGjcVQM4wGteh',
          html_url: 'https://github.com/suo/actions-test/pull/5',
          diff_url: 'https://github.com/suo/actions-test/pull/5.diff',
          patch_url: 'https://github.com/suo/actions-test/pull/5.patch',
          issue_url: 'https://api.github.com/repos/suo/actions-test/issues/5',
          number: 5,
          state: 'open',
          locked: false,
          title: 'Suo patch 1',
          user: [Object],
          body: null,
          created_at: '2021-12-20T23:18:22Z',
          updated_at: '2022-01-06T02:46:07Z',
          closed_at: null,
          merged_at: null,
          merge_commit_sha: '4edd5906e4c44ac7e83d5de64019d750e8ec123d',
          assignee: null,
          assignees: [],
          requested_reviewers: [],
          requested_teams: [],
          labels: [Array],
          milestone: null,
          draft: false,
          commits_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/commits',
          review_comments_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/comments',
          review_comment_url: 'https://api.github.com/repos/suo/actions-test/pulls/comments{/number}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/issues/5/comments',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/600835c72e2462ea095cf19f1fabe39488dd0d53',
          head: [Object],
          base: [Object],
          _links: [Object],
          author_association: 'OWNER',
          auto_merge: null,
          active_lock_reason: null,
          merged: false,
          mergeable: true,
          rebaseable: true,
          mergeable_state: 'clean',
          merged_by: null,
          comments: 0,
          review_comments: 0,
          maintainer_can_modify: false,
          commits: 3,
          additions: 2,
          deletions: 0,
          changed_files: 1
        },
        label: {
          id: 3702625053,
          node_id: 'LA_kwDOGjcVQM7csZMd',
          url: 'https://api.github.com/repos/suo/actions-test/labels/ciflow/test',
          name: 'ciflow/trunk',
          color: 'E426F5',
          default: false,
          description: ''
        },
        repository: {
          id: 439817536,
          node_id: 'R_kgDOGjcVQA',
          name: 'actions-test',
          full_name: 'suo/actions-test',
          private: false,
          owner: [Object],
          html_url: 'https://github.com/suo/actions-test',
          description: null,
          fork: false,
          url: 'https://api.github.com/repos/suo/actions-test',
          forks_url: 'https://api.github.com/repos/suo/actions-test/forks',
          keys_url: 'https://api.github.com/repos/suo/actions-test/keys{/key_id}',
          collaborators_url: 'https://api.github.com/repos/suo/actions-test/collaborators{/collaborator}',
          teams_url: 'https://api.github.com/repos/suo/actions-test/teams',
          hooks_url: 'https://api.github.com/repos/suo/actions-test/hooks',
          issue_events_url: 'https://api.github.com/repos/suo/actions-test/issues/events{/number}',
          events_url: 'https://api.github.com/repos/suo/actions-test/events',
          assignees_url: 'https://api.github.com/repos/suo/actions-test/assignees{/user}',
          branches_url: 'https://api.github.com/repos/suo/actions-test/branches{/branch}',
          tags_url: 'https://api.github.com/repos/suo/actions-test/tags',
          blobs_url: 'https://api.github.com/repos/suo/actions-test/git/blobs{/sha}',
          git_tags_url: 'https://api.github.com/repos/suo/actions-test/git/tags{/sha}',
          git_refs_url: 'https://api.github.com/repos/suo/actions-test/git/refs{/sha}',
          trees_url: 'https://api.github.com/repos/suo/actions-test/git/trees{/sha}',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/{sha}',
          languages_url: 'https://api.github.com/repos/suo/actions-test/languages',
          stargazers_url: 'https://api.github.com/repos/suo/actions-test/stargazers',
          contributors_url: 'https://api.github.com/repos/suo/actions-test/contributors',
          subscribers_url: 'https://api.github.com/repos/suo/actions-test/subscribers',
          subscription_url: 'https://api.github.com/repos/suo/actions-test/subscription',
          commits_url: 'https://api.github.com/repos/suo/actions-test/commits{/sha}',
          git_commits_url: 'https://api.github.com/repos/suo/actions-test/git/commits{/sha}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/comments{/number}',
          issue_comment_url: 'https://api.github.com/repos/suo/actions-test/issues/comments{/number}',
          contents_url: 'https://api.github.com/repos/suo/actions-test/contents/{+path}',
          compare_url: 'https://api.github.com/repos/suo/actions-test/compare/{base}...{head}',
          merges_url: 'https://api.github.com/repos/suo/actions-test/merges',
          archive_url: 'https://api.github.com/repos/suo/actions-test/{archive_format}{/ref}',
          downloads_url: 'https://api.github.com/repos/suo/actions-test/downloads',
          issues_url: 'https://api.github.com/repos/suo/actions-test/issues{/number}',
          pulls_url: 'https://api.github.com/repos/suo/actions-test/pulls{/number}',
          milestones_url: 'https://api.github.com/repos/suo/actions-test/milestones{/number}',
          notifications_url: 'https://api.github.com/repos/suo/actions-test/notifications{?since,all,participating}',
          labels_url: 'https://api.github.com/repos/suo/actions-test/labels{/name}',
          releases_url: 'https://api.github.com/repos/suo/actions-test/releases{/id}',
          deployments_url: 'https://api.github.com/repos/suo/actions-test/deployments',
          created_at: '2021-12-19T08:58:01Z',
          updated_at: '2021-12-23T06:00:10Z',
          pushed_at: '2021-12-23T06:00:07Z',
          git_url: 'git://github.com/suo/actions-test.git',
          ssh_url: 'git@github.com:suo/actions-test.git',
          clone_url: 'https://github.com/suo/actions-test.git',
          svn_url: 'https://github.com/suo/actions-test',
          homepage: null,
          size: 4,
          stargazers_count: 0,
          watchers_count: 0,
          language: 'Python',
          has_issues: true,
          has_projects: true,
          has_downloads: true,
          has_wiki: true,
          has_pages: false,
          forks_count: 1,
          mirror_url: null,
          archived: false,
          disabled: false,
          open_issues_count: 4,
          license: null,
          allow_forking: true,
          is_template: false,
          topics: [],
          visibility: 'public',
          forks: 1,
          open_issues: 4,
          watchers: 0,
          default_branch: 'main'
        },
        sender: {
          login: 'suo',
          id: 1617424,
          node_id: 'MDQ6VXNlcjE2MTc0MjQ=',
          avatar_url: 'https://avatars.githubusercontent.com/u/1617424?v=4',
          gravatar_id: '',
          url: 'https://api.github.com/users/suo',
          html_url: 'https://github.com/suo',
          followers_url: 'https://api.github.com/users/suo/followers',
          following_url: 'https://api.github.com/users/suo/following{/other_user}',
          gists_url: 'https://api.github.com/users/suo/gists{/gist_id}',
          starred_url: 'https://api.github.com/users/suo/starred{/owner}{/repo}',
          subscriptions_url: 'https://api.github.com/users/suo/subscriptions',
          organizations_url: 'https://api.github.com/users/suo/orgs',
          repos_url: 'https://api.github.com/users/suo/repos',
          events_url: 'https://api.github.com/users/suo/events{/privacy}',
          received_events_url: 'https://api.github.com/users/suo/received_events',
          type: 'User',
          site_admin: false
        }
      },
      octokit: OctokitWithDefaults {
        request: [Function: newApi] {
          endpoint: [Function],
          defaults: [Function: bound withDefaults]
        },
        graphql: [Function: newApi] {
          defaults: [Function: bound withDefaults],
          endpoint: [Function]
        },
        log: {
          debug: [Function: bound noop],
          info: [Function: bound LOG],
          warn: [Function: bound LOG],
          error: [Function: bound LOG],
          trace: [Function: bound noop],
          fatal: [Function: bound ],
          levels: [Object],
          silent: [Function: bound noop],
          constructor: [Function: bound Pino],
          child: [Function: bound child],
          bindings: [Function: bound bindings],
          setBindings: [Function: bound setBindings],
          flush: [Function: bound flush],
          isLevelEnabled: [Function: bound isLevelEnabled],
          version: '6.14.0',
          level: 'info',
          levelVal: 30,
          _events: undefined,
          _eventsCount: 0,
          _maxListeners: undefined,
          setMaxListeners: [Function: bound setMaxListeners],
          getMaxListeners: [Function: bound getMaxListeners],
          emit: [Function: bound emit],
          addListener: [Function: bound addListener],
          on: [Function: bound addListener],
          prependListener: [Function: bound prependListener],
          once: [Function: bound once],
          prependOnceListener: [Function: bound prependOnceListener],
          removeListener: [Function: bound removeListener],
          off: [Function: bound removeListener],
          removeAllListeners: [Function: bound removeAllListeners],
          listeners: [Function: bound listeners],
          rawListeners: [Function: bound rawListeners],
          listenerCount: [Function: bound listenerCount],
          eventNames: [Function: bound eventNames]
        },
        hook: [Function: bound register] {
          api: [Object],
          remove: [Function: bound removeHook],
          before: [Function: bound addHook],
          error: [Function: bound addHook],
          after: [Function: bound addHook],
          wrap: [Function: bound addHook]
        },
        auth: [Function: bound auth] AsyncFunction {
          hook: [Function: bound hook] AsyncFunction
        },
        retry: { retryRequest: [Function: retryRequest] },
        paginate: [Function: bound paginate] { iterator: [Function: bound iterator] },
        actions: {
          addCustomLabelsToSelfHostedRunnerForOrg: [Function],
          addCustomLabelsToSelfHostedRunnerForRepo: [Function],
          addSelectedRepoToOrgSecret: [Function],
          approveWorkflowRun: [Function],
          cancelWorkflowRun: [Function],
          createOrUpdateEnvironmentSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          createRegistrationTokenForOrg: [Function],
          createRegistrationTokenForRepo: [Function],
          createRemoveTokenForOrg: [Function],
          createRemoveTokenForRepo: [Function],
          createWorkflowDispatch: [Function],
          deleteActionsCacheById: [Function],
          deleteActionsCacheByKey: [Function],
          deleteArtifact: [Function],
          deleteEnvironmentSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          deleteSelfHostedRunnerFromOrg: [Function],
          deleteSelfHostedRunnerFromRepo: [Function],
          deleteWorkflowRun: [Function],
          deleteWorkflowRunLogs: [Function],
          disableSelectedRepositoryGithubActionsOrganization: [Function],
          disableWorkflow: [Function],
          downloadArtifact: [Function],
          downloadJobLogsForWorkflowRun: [Function],
          downloadWorkflowRunAttemptLogs: [Function],
          downloadWorkflowRunLogs: [Function],
          enableSelectedRepositoryGithubActionsOrganization: [Function],
          enableWorkflow: [Function],
          getActionsCacheList: [Function],
          getActionsCacheUsage: [Function],
          getActionsCacheUsageByRepoForOrg: [Function],
          getActionsCacheUsageForEnterprise: [Function],
          getActionsCacheUsageForOrg: [Function],
          getAllowedActionsOrganization: [Function],
          getAllowedActionsRepository: [Function],
          getArtifact: [Function],
          getEnvironmentPublicKey: [Function],
          getEnvironmentSecret: [Function],
          getGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          getGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          getGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          getGithubActionsPermissionsOrganization: [Function],
          getGithubActionsPermissionsRepository: [Function],
          getJobForWorkflowRun: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getPendingDeploymentsForRun: [Function],
          getRepoPermissions: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getReviewsForRun: [Function],
          getSelfHostedRunnerForOrg: [Function],
          getSelfHostedRunnerForRepo: [Function],
          getWorkflow: [Function],
          getWorkflowAccessToRepository: [Function],
          getWorkflowRun: [Function],
          getWorkflowRunAttempt: [Function],
          getWorkflowRunUsage: [Function],
          getWorkflowUsage: [Function],
          listArtifactsForRepo: [Function],
          listEnvironmentSecrets: [Function],
          listJobsForWorkflowRun: [Function],
          listJobsForWorkflowRunAttempt: [Function],
          listLabelsForSelfHostedRunnerForOrg: [Function],
          listLabelsForSelfHostedRunnerForRepo: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listRepoWorkflows: [Function],
          listRunnerApplicationsForOrg: [Function],
          listRunnerApplicationsForRepo: [Function],
          listSelectedReposForOrgSecret: [Function],
          listSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          listSelfHostedRunnersForOrg: [Function],
          listSelfHostedRunnersForRepo: [Function],
          listWorkflowRunArtifacts: [Function],
          listWorkflowRuns: [Function],
          listWorkflowRunsForRepo: [Function],
          reRunJobForWorkflowRun: [Function],
          reRunWorkflow: [Function],
          reRunWorkflowFailedJobs: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForOrg: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForRepo: [Function],
          removeCustomLabelFromSelfHostedRunnerForOrg: [Function],
          removeCustomLabelFromSelfHostedRunnerForRepo: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          reviewPendingDeploymentsForRun: [Function],
          setAllowedActionsOrganization: [Function],
          setAllowedActionsRepository: [Function],
          setCustomLabelsForSelfHostedRunnerForOrg: [Function],
          setCustomLabelsForSelfHostedRunnerForRepo: [Function],
          setGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          setGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          setGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          setGithubActionsPermissionsOrganization: [Function],
          setGithubActionsPermissionsRepository: [Function],
          setSelectedReposForOrgSecret: [Function],
          setSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          setWorkflowAccessToRepository: [Function]
        },
        activity: {
          checkRepoIsStarredByAuthenticatedUser: [Function],
          deleteRepoSubscription: [Function],
          deleteThreadSubscription: [Function],
          getFeeds: [Function],
          getRepoSubscription: [Function],
          getThread: [Function],
          getThreadSubscriptionForAuthenticatedUser: [Function],
          listEventsForAuthenticatedUser: [Function],
          listNotificationsForAuthenticatedUser: [Function],
          listOrgEventsForAuthenticatedUser: [Function],
          listPublicEvents: [Function],
          listPublicEventsForRepoNetwork: [Function],
          listPublicEventsForUser: [Function],
          listPublicOrgEvents: [Function],
          listReceivedEventsForUser: [Function],
          listReceivedPublicEventsForUser: [Function],
          listRepoEvents: [Function],
          listRepoNotificationsForAuthenticatedUser: [Function],
          listReposStarredByAuthenticatedUser: [Function],
          listReposStarredByUser: [Function],
          listReposWatchedByUser: [Function],
          listStargazersForRepo: [Function],
          listWatchedReposForAuthenticatedUser: [Function],
          listWatchersForRepo: [Function],
          markNotificationsAsRead: [Function],
          markRepoNotificationsAsRead: [Function],
          markThreadAsRead: [Function],
          setRepoSubscription: [Function],
          setThreadSubscription: [Function],
          starRepoForAuthenticatedUser: [Function],
          unstarRepoForAuthenticatedUser: [Function]
        },
        apps: {
          addRepoToInstallation: [Function],
          addRepoToInstallationForAuthenticatedUser: [Function],
          checkToken: [Function],
          createFromManifest: [Function],
          createInstallationAccessToken: [Function],
          deleteAuthorization: [Function],
          deleteInstallation: [Function],
          deleteToken: [Function],
          getAuthenticated: [Function],
          getBySlug: [Function],
          getInstallation: [Function],
          getOrgInstallation: [Function],
          getRepoInstallation: [Function],
          getSubscriptionPlanForAccount: [Function],
          getSubscriptionPlanForAccountStubbed: [Function],
          getUserInstallation: [Function],
          getWebhookConfigForApp: [Function],
          getWebhookDelivery: [Function],
          listAccountsForPlan: [Function],
          listAccountsForPlanStubbed: [Function],
          listInstallationReposForAuthenticatedUser: [Function],
          listInstallations: [Function],
          listInstallationsForAuthenticatedUser: [Function],
          listPlans: [Function],
          listPlansStubbed: [Function],
          listReposAccessibleToInstallation: [Function],
          listSubscriptionsForAuthenticatedUser: [Function],
          listSubscriptionsForAuthenticatedUserStubbed: [Function],
          listWebhookDeliveries: [Function],
          redeliverWebhookDelivery: [Function],
          removeRepoFromInstallation: [Function],
          removeRepoFromInstallationForAuthenticatedUser: [Function],
          resetToken: [Function],
          revokeInstallationAccessToken: [Function],
          scopeToken: [Function],
          suspendInstallation: [Function],
          unsuspendInstallation: [Function],
          updateWebhookConfigForApp: [Function]
        },
        billing: {
          getGithubActionsBillingOrg: [Function],
          getGithubActionsBillingUser: [Function],
          getGithubAdvancedSecurityBillingGhe: [Function],
          getGithubAdvancedSecurityBillingOrg: [Function],
          getGithubPackagesBillingOrg: [Function],
          getGithubPackagesBillingUser: [Function],
          getSharedStorageBillingOrg: [Function],
          getSharedStorageBillingUser: [Function]
        },
        checks: {
          create: [Function],
          createSuite: [Function],
          get: [Function],
          getSuite: [Function],
          listAnnotations: [Function],
          listForRef: [Function],
          listForSuite: [Function],
          listSuitesForRef: [Function],
          rerequestRun: [Function],
          rerequestSuite: [Function],
          setSuitesPreferences: [Function],
          update: [Function]
        },
        codeScanning: {
          deleteAnalysis: [Function],
          getAlert: [Function],
          getAnalysis: [Function],
          getSarif: [Function],
          listAlertInstances: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listAlertsInstances: [Function],
          listRecentAnalyses: [Function],
          updateAlert: [Function],
          uploadSarif: [Function]
        },
        codesOfConduct: { getAllCodesOfConduct: [Function], getConductCode: [Function] },
        codespaces: {
          addRepositoryForSecretForAuthenticatedUser: [Function],
          codespaceMachinesForAuthenticatedUser: [Function],
          createForAuthenticatedUser: [Function],
          createOrUpdateRepoSecret: [Function],
          createOrUpdateSecretForAuthenticatedUser: [Function],
          createWithPrForAuthenticatedUser: [Function],
          createWithRepoForAuthenticatedUser: [Function],
          deleteForAuthenticatedUser: [Function],
          deleteFromOrganization: [Function],
          deleteRepoSecret: [Function],
          deleteSecretForAuthenticatedUser: [Function],
          exportForAuthenticatedUser: [Function],
          getExportDetailsForAuthenticatedUser: [Function],
          getForAuthenticatedUser: [Function],
          getPublicKeyForAuthenticatedUser: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getSecretForAuthenticatedUser: [Function],
          listDevcontainersInRepositoryForAuthenticatedUser: [Function],
          listForAuthenticatedUser: [Function],
          listInOrganization: [Function],
          listInRepositoryForAuthenticatedUser: [Function],
          listRepoSecrets: [Function],
          listRepositoriesForSecretForAuthenticatedUser: [Function],
          listSecretsForAuthenticatedUser: [Function],
          removeRepositoryForSecretForAuthenticatedUser: [Function],
          repoMachinesForAuthenticatedUser: [Function],
          setRepositoriesForSecretForAuthenticatedUser: [Function],
          startForAuthenticatedUser: [Function],
          stopForAuthenticatedUser: [Function],
          stopInOrganization: [Function],
          updateForAuthenticatedUser: [Function]
        },
        dependabot: {
          addSelectedRepoToOrgSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listSelectedReposForOrgSecret: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          setSelectedReposForOrgSecret: [Function]
        },
        dependencyGraph: { createRepositorySnapshot: [Function], diffRange: [Function] },
        emojis: { get: [Function] },
        enterpriseAdmin: {
          addCustomLabelsToSelfHostedRunnerForEnterprise: [Function],
          disableSelectedOrganizationGithubActionsEnterprise: [Function],
          enableSelectedOrganizationGithubActionsEnterprise: [Function],
          getAllowedActionsEnterprise: [Function],
          getGithubActionsPermissionsEnterprise: [Function],
          getServerStatistics: [Function],
          listLabelsForSelfHostedRunnerForEnterprise: [Function],
          listSelectedOrganizationsEnabledGithubActionsEnterprise: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [Function],
          removeCustomLabelFromSelfHostedRunnerForEnterprise: [Function],
          setAllowedActionsEnterprise: [Function],
          setCustomLabelsForSelfHostedRunnerForEnterprise: [Function],
          setGithubActionsPermissionsEnterprise: [Function],
          setSelectedOrganizationsEnabledGithubActionsEnterprise: [Function]
        },
        gists: {
          checkIsStarred: [Function],
          create: [Function],
          createComment: [Function],
          delete: [Function],
          deleteComment: [Function],
          fork: [Function],
          get: [Function],
          getComment: [Function],
          getRevision: [Function],
          list: [Function],
          listComments: [Function],
          listCommits: [Function],
          listForUser: [Function],
          listForks: [Function],
          listPublic: [Function],
          listStarred: [Function],
          star: [Function],
          unstar: [Function],
          update: [Function],
          updateComment: [Function]
        },
        git: {
          createBlob: [Function],
          createCommit: [Function],
          createRef: [Function],
          createTag: [Function],
          createTree: [Function],
          deleteRef: [Function],
          getBlob: [Function],
          getCommit: [Function],
          getRef: [Function],
          getTag: [Function],
          getTree: [Function],
          listMatchingRefs: [Function],
          updateRef: [Function]
        },
        gitignore: { getAllTemplates: [Function], getTemplate: [Function] },
        interactions: {
          getRestrictionsForAuthenticatedUser: [Function],
          getRestrictionsForOrg: [Function],
          getRestrictionsForRepo: [Function],
          getRestrictionsForYourPublicRepos: [Function],
          removeRestrictionsForAuthenticatedUser: [Function],
          removeRestrictionsForOrg: [Function],
          removeRestrictionsForRepo: [Function],
          removeRestrictionsForYourPublicRepos: [Function],
          setRestrictionsForAuthenticatedUser: [Function],
          setRestrictionsForOrg: [Function],
          setRestrictionsForRepo: [Function],
          setRestrictionsForYourPublicRepos: [Function]
        },
        issues: {
          addAssignees: [Function],
          addLabels: [Function],
          checkUserCanBeAssigned: [Function],
          create: [Function],
          createComment: [Function],
          createLabel: [Function],
          createMilestone: [Function],
          deleteComment: [Function],
          deleteLabel: [Function],
          deleteMilestone: [Function],
          get: [Function],
          getComment: [Function],
          getEvent: [Function],
          getLabel: [Function],
          getMilestone: [Function],
          list: [Function],
          listAssignees: [Function],
          listComments: [Function],
          listCommentsForRepo: [Function],
          listEvents: [Function],
          listEventsForRepo: [Function],
          listEventsForTimeline: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listLabelsForMilestone: [Function],
          listLabelsForRepo: [Function],
          listLabelsOnIssue: [Function],
          listMilestones: [Function],
          lock: [Function],
          removeAllLabels: [Function],
          removeAssignees: [Function],
          removeLabel: [Function],
          setLabels: [Function],
          unlock: [Function],
          update: [Function],
          updateComment: [Function],
          updateLabel: [Function],
          updateMilestone: [Function]
        },
        licenses: {
          get: [Function],
          getAllCommonlyUsed: [Function],
          getForRepo: [Function]
        },
        markdown: { render: [Function], renderRaw: [Function] },
        meta: {
          get: [Function],
          getOctocat: [Function],
          getZen: [Function],
          root: [Function]
        },
        migrations: {
          cancelImport: [Function],
          deleteArchiveForAuthenticatedUser: [Function],
          deleteArchiveForOrg: [Function],
          downloadArchiveForOrg: [Function],
          getArchiveForAuthenticatedUser: [Function],
          getCommitAuthors: [Function],
          getImportStatus: [Function],
          getLargeFiles: [Function],
          getStatusForAuthenticatedUser: [Function],
          getStatusForOrg: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listReposForAuthenticatedUser: [Function],
          listReposForOrg: [Function],
          listReposForUser: [Function],
          mapCommitAuthor: [Function],
          setLfsPreference: [Function],
          startForAuthenticatedUser: [Function],
          startForOrg: [Function],
          startImport: [Function],
          unlockRepoForAuthenticatedUser: [Function],
          unlockRepoForOrg: [Function],
          updateImport: [Function]
        },
        orgs: {
          blockUser: [Function],
          cancelInvitation: [Function],
          checkBlockedUser: [Function],
          checkMembershipForUser: [Function],
          checkPublicMembershipForUser: [Function],
          convertMemberToOutsideCollaborator: [Function],
          createInvitation: [Function],
          createWebhook: [Function],
          deleteWebhook: [Function],
          get: [Function],
          getMembershipForAuthenticatedUser: [Function],
          getMembershipForUser: [Function],
          getWebhook: [Function],
          getWebhookConfigForOrg: [Function],
          getWebhookDelivery: [Function],
          list: [Function],
          listAppInstallations: [Function],
          listBlockedUsers: [Function],
          listCustomRoles: [Function],
          listFailedInvitations: [Function],
          listForAuthenticatedUser: [Function],
          listForUser: [Function],
          listInvitationTeams: [Function],
          listMembers: [Function],
          listMembershipsForAuthenticatedUser: [Function],
          listOutsideCollaborators: [Function],
          listPendingInvitations: [Function],
          listPublicMembers: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeMember: [Function],
          removeMembershipForUser: [Function],
          removeOutsideCollaborator: [Function],
          removePublicMembershipForAuthenticatedUser: [Function],
          setMembershipForUser: [Function],
          setPublicMembershipForAuthenticatedUser: [Function],
          unblockUser: [Function],
          update: [Function],
          updateMembershipForAuthenticatedUser: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForOrg: [Function]
        },
        packages: {
          deletePackageForAuthenticatedUser: [Function],
          deletePackageForOrg: [Function],
          deletePackageForUser: [Function],
          deletePackageVersionForAuthenticatedUser: [Function],
          deletePackageVersionForOrg: [Function],
          deletePackageVersionForUser: [Function],
          getAllPackageVersionsForAPackageOwnedByAnOrg: [Function],
          getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByOrg: [Function],
          getAllPackageVersionsForPackageOwnedByUser: [Function],
          getPackageForAuthenticatedUser: [Function],
          getPackageForOrganization: [Function],
          getPackageForUser: [Function],
          getPackageVersionForAuthenticatedUser: [Function],
          getPackageVersionForOrganization: [Function],
          getPackageVersionForUser: [Function],
          listPackagesForAuthenticatedUser: [Function],
          listPackagesForOrganization: [Function],
          listPackagesForUser: [Function],
          restorePackageForAuthenticatedUser: [Function],
          restorePackageForOrg: [Function],
          restorePackageForUser: [Function],
          restorePackageVersionForAuthenticatedUser: [Function],
          restorePackageVersionForOrg: [Function],
          restorePackageVersionForUser: [Function]
        },
        projects: {
          addCollaborator: [Function],
          createCard: [Function],
          createColumn: [Function],
          createForAuthenticatedUser: [Function],
          createForOrg: [Function],
          createForRepo: [Function],
          delete: [Function],
          deleteCard: [Function],
          deleteColumn: [Function],
          get: [Function],
          getCard: [Function],
          getColumn: [Function],
          getPermissionForUser: [Function],
          listCards: [Function],
          listCollaborators: [Function],
          listColumns: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listForUser: [Function],
          moveCard: [Function],
          moveColumn: [Function],
          removeCollaborator: [Function],
          update: [Function],
          updateCard: [Function],
          updateColumn: [Function]
        },
        pulls: {
          checkIfMerged: [Function],
          create: [Function],
          createReplyForReviewComment: [Function],
          createReview: [Function],
          createReviewComment: [Function],
          deletePendingReview: [Function],
          deleteReviewComment: [Function],
          dismissReview: [Function],
          get: [Function],
          getReview: [Function],
          getReviewComment: [Function],
          list: [Function],
          listCommentsForReview: [Function],
          listCommits: [Function],
          listFiles: [Function],
          listRequestedReviewers: [Function],
          listReviewComments: [Function],
          listReviewCommentsForRepo: [Function],
          listReviews: [Function],
          merge: [Function],
          removeRequestedReviewers: [Function],
          requestReviewers: [Function],
          submitReview: [Function],
          update: [Function],
          updateBranch: [Function],
          updateReview: [Function],
          updateReviewComment: [Function]
        },
        rateLimit: { get: [Function] },
        reactions: {
          createForCommitComment: [Function],
          createForIssue: [Function],
          createForIssueComment: [Function],
          createForPullRequestReviewComment: [Function],
          createForRelease: [Function],
          createForTeamDiscussionCommentInOrg: [Function],
          createForTeamDiscussionInOrg: [Function],
          deleteForCommitComment: [Function],
          deleteForIssue: [Function],
          deleteForIssueComment: [Function],
          deleteForPullRequestComment: [Function],
          deleteForRelease: [Function],
          deleteForTeamDiscussion: [Function],
          deleteForTeamDiscussionComment: [Function],
          listForCommitComment: [Function],
          listForIssue: [Function],
          listForIssueComment: [Function],
          listForPullRequestReviewComment: [Function],
          listForRelease: [Function],
          listForTeamDiscussionCommentInOrg: [Function],
          listForTeamDiscussionInOrg: [Function]
        },
        repos: {
          acceptInvitation: [Function],
          acceptInvitationForAuthenticatedUser: [Function],
          addAppAccessRestrictions: [Function],
          addCollaborator: [Function],
          addStatusCheckContexts: [Function],
          addTeamAccessRestrictions: [Function],
          addUserAccessRestrictions: [Function],
          checkCollaborator: [Function],
          checkVulnerabilityAlerts: [Function],
          codeownersErrors: [Function],
          compareCommits: [Function],
          compareCommitsWithBasehead: [Function],
          createAutolink: [Function],
          createCommitComment: [Function],
          createCommitSignatureProtection: [Function],
          createCommitStatus: [Function],
          createDeployKey: [Function],
          createDeployment: [Function],
          createDeploymentStatus: [Function],
          createDispatchEvent: [Function],
          createForAuthenticatedUser: [Function],
          createFork: [Function],
          createInOrg: [Function],
          createOrUpdateEnvironment: [Function],
          createOrUpdateFileContents: [Function],
          createPagesSite: [Function],
          createRelease: [Function],
          createTagProtection: [Function],
          createUsingTemplate: [Function],
          createWebhook: [Function],
          declineInvitation: [Function],
          declineInvitationForAuthenticatedUser: [Function],
          delete: [Function],
          deleteAccessRestrictions: [Function],
          deleteAdminBranchProtection: [Function],
          deleteAnEnvironment: [Function],
          deleteAutolink: [Function],
          deleteBranchProtection: [Function],
          deleteCommitComment: [Function],
          deleteCommitSignatureProtection: [Function],
          deleteDeployKey: [Function],
          deleteDeployment: [Function],
          deleteFile: [Function],
          deleteInvitation: [Function],
          deletePagesSite: [Function],
          deletePullRequestReviewProtection: [Function],
          deleteRelease: [Function],
          deleteReleaseAsset: [Function],
          deleteTagProtection: [Function],
          deleteWebhook: [Function],
          disableAutomatedSecurityFixes: [Function],
          disableLfsForRepo: [Function],
          disableVulnerabilityAlerts: [Function],
          downloadArchive: [Function],
          downloadTarballArchive: [Function],
          downloadZipballArchive: [Function],
          enableAutomatedSecurityFixes: [Function],
          enableLfsForRepo: [Function],
          enableVulnerabilityAlerts: [Function],
          generateReleaseNotes: [Function],
          get: [Function],
          getAccessRestrictions: [Function],
          getAdminBranchProtection: [Function],
          getAllEnvironments: [Function],
          getAllStatusCheckContexts: [Function],
          getAllTopics: [Function],
          getAppsWithAccessToProtectedBranch: [Function],
          getAutolink: [Function],
          getBranch: [Function],
          getBranchProtection: [Function],
          getClones: [Function],
          getCodeFrequencyStats: [Function],
          getCollaboratorPermissionLevel: [Function],
          getCombinedStatusForRef: [Function],
          getCommit: [Function],
          getCommitActivityStats: [Function],
          getCommitComment: [Function],
          getCommitSignatureProtection: [Function],
          getCommunityProfileMetrics: [Function],
          getContent: [Function],
          getContributorsStats: [Function],
          getDeployKey: [Function],
          getDeployment: [Function],
          getDeploymentStatus: [Function],
          getEnvironment: [Function],
          getLatestPagesBuild: [Function],
          getLatestRelease: [Function],
          getPages: [Function],
          getPagesBuild: [Function],
          getPagesHealthCheck: [Function],
          getParticipationStats: [Function],
          getPullRequestReviewProtection: [Function],
          getPunchCardStats: [Function],
          getReadme: [Function],
          getReadmeInDirectory: [Function],
          getRelease: [Function],
          getReleaseAsset: [Function],
          getReleaseByTag: [Function],
          getStatusChecksProtection: [Function],
          getTeamsWithAccessToProtectedBranch: [Function],
          getTopPaths: [Function],
          getTopReferrers: [Function],
          getUsersWithAccessToProtectedBranch: [Function],
          getViews: [Function],
          getWebhook: [Function],
          getWebhookConfigForRepo: [Function],
          getWebhookDelivery: [Function],
          listAutolinks: [Function],
          listBranches: [Function],
          listBranchesForHeadCommit: [Function],
          listCollaborators: [Function],
          listCommentsForCommit: [Function],
          listCommitCommentsForRepo: [Function],
          listCommitStatusesForRef: [Function],
          listCommits: [Function],
          listContributors: [Function],
          listDeployKeys: [Function],
          listDeploymentStatuses: [Function],
          listDeployments: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForUser: [Function],
          listForks: [Function],
          listInvitations: [Function],
          listInvitationsForAuthenticatedUser: [Function],
          listLanguages: [Function],
          listPagesBuilds: [Function],
          listPublic: [Function],
          listPullRequestsAssociatedWithCommit: [Function],
          listReleaseAssets: [Function],
          listReleases: [Function],
          listTagProtection: [Function],
          listTags: [Function],
          listTeams: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          merge: [Function],
          mergeUpstream: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeAppAccessRestrictions: [Function],
          removeCollaborator: [Function],
          removeStatusCheckContexts: [Function],
          removeStatusCheckProtection: [Function],
          removeTeamAccessRestrictions: [Function],
          removeUserAccessRestrictions: [Function],
          renameBranch: [Function],
          replaceAllTopics: [Function],
          requestPagesBuild: [Function],
          setAdminBranchProtection: [Function],
          setAppAccessRestrictions: [Function],
          setStatusCheckContexts: [Function],
          setTeamAccessRestrictions: [Function],
          setUserAccessRestrictions: [Function],
          testPushWebhook: [Function],
          transfer: [Function],
          update: [Function],
          updateBranchProtection: [Function],
          updateCommitComment: [Function],
          updateInformationAboutPagesSite: [Function],
          updateInvitation: [Function],
          updatePullRequestReviewProtection: [Function],
          updateRelease: [Function],
          updateReleaseAsset: [Function],
          updateStatusCheckPotection: [Function],
          updateStatusCheckProtection: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForRepo: [Function],
          uploadReleaseAsset: [Function]
        },
        search: {
          code: [Function],
          commits: [Function],
          issuesAndPullRequests: [Function],
          labels: [Function],
          repos: [Function],
          topics: [Function],
          users: [Function]
        },
        secretScanning: {
          getAlert: [Function],
          listAlertsForEnterprise: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listLocationsForAlert: [Function],
          updateAlert: [Function]
        },
        teams: {
          addOrUpdateMembershipForUserInOrg: [Function],
          addOrUpdateProjectPermissionsInOrg: [Function],
          addOrUpdateRepoPermissionsInOrg: [Function],
          checkPermissionsForProjectInOrg: [Function],
          checkPermissionsForRepoInOrg: [Function],
          create: [Function],
          createDiscussionCommentInOrg: [Function],
          createDiscussionInOrg: [Function],
          deleteDiscussionCommentInOrg: [Function],
          deleteDiscussionInOrg: [Function],
          deleteInOrg: [Function],
          getByName: [Function],
          getDiscussionCommentInOrg: [Function],
          getDiscussionInOrg: [Function],
          getMembershipForUserInOrg: [Function],
          list: [Function],
          listChildInOrg: [Function],
          listDiscussionCommentsInOrg: [Function],
          listDiscussionsInOrg: [Function],
          listForAuthenticatedUser: [Function],
          listMembersInOrg: [Function],
          listPendingInvitationsInOrg: [Function],
          listProjectsInOrg: [Function],
          listReposInOrg: [Function],
          removeMembershipForUserInOrg: [Function],
          removeProjectInOrg: [Function],
          removeRepoInOrg: [Function],
          updateDiscussionCommentInOrg: [Function],
          updateDiscussionInOrg: [Function],
          updateInOrg: [Function]
        },
        users: {
          addEmailForAuthenticated: [Function],
          addEmailForAuthenticatedUser: [Function],
          block: [Function],
          checkBlocked: [Function],
          checkFollowingForUser: [Function],
          checkPersonIsFollowedByAuthenticated: [Function],
          createGpgKeyForAuthenticated: [Function],
          createGpgKeyForAuthenticatedUser: [Function],
          createPublicSshKeyForAuthenticated: [Function],
          createPublicSshKeyForAuthenticatedUser: [Function],
          deleteEmailForAuthenticated: [Function],
          deleteEmailForAuthenticatedUser: [Function],
          deleteGpgKeyForAuthenticated: [Function],
          deleteGpgKeyForAuthenticatedUser: [Function],
          deletePublicSshKeyForAuthenticated: [Function],
          deletePublicSshKeyForAuthenticatedUser: [Function],
          follow: [Function],
          getAuthenticated: [Function],
          getByUsername: [Function],
          getContextForUser: [Function],
          getGpgKeyForAuthenticated: [Function],
          getGpgKeyForAuthenticatedUser: [Function],
          getPublicSshKeyForAuthenticated: [Function],
          getPublicSshKeyForAuthenticatedUser: [Function],
          list: [Function],
          listBlockedByAuthenticated: [Function],
          listBlockedByAuthenticatedUser: [Function],
          listEmailsForAuthenticated: [Function],
          listEmailsForAuthenticatedUser: [Function],
          listFollowedByAuthenticated: [Function],
          listFollowedByAuthenticatedUser: [Function],
          listFollowersForAuthenticatedUser: [Function],
          listFollowersForUser: [Function],
          listFollowingForUser: [Function],
          listGpgKeysForAuthenticated: [Function],
          listGpgKeysForAuthenticatedUser: [Function],
          listGpgKeysForUser: [Function],
          listPublicEmailsForAuthenticated: [Function],
          listPublicEmailsForAuthenticatedUser: [Function],
          listPublicKeysForUser: [Function],
          listPublicSshKeysForAuthenticated: [Function],
          listPublicSshKeysForAuthenticatedUser: [Function],
          setPrimaryEmailVisibilityForAuthenticated: [Function],
          setPrimaryEmailVisibilityForAuthenticatedUser: [Function],
          unblock: [Function],
          unfollow: [Function],
          updateAuthenticated: [Function]
        },
        rest: {
          actions: [Object],
          activity: [Object],
          apps: [Object],
          billing: [Object],
          checks: [Object],
          codeScanning: [Object],
          codesOfConduct: [Object],
          codespaces: [Object],
          dependabot: [Object],
          dependencyGraph: [Object],
          emojis: [Object],
          enterpriseAdmin: [Object],
          gists: [Object],
          git: [Object],
          gitignore: [Object],
          interactions: [Object],
          issues: [Object],
          licenses: [Object],
          markdown: [Object],
          meta: [Object],
          migrations: [Object],
          orgs: [Object],
          packages: [Object],
          projects: [Object],
          pulls: [Object],
          rateLimit: [Object],
          reactions: [Object],
          repos: [Object],
          search: [Object],
          secretScanning: [Object],
          teams: [Object],
          users: [Object]
        },
        config: { get: [AsyncFunction: get] }
      },
      log: [Function: logInfo] {
        trace: [Function: bound noop],
        debug: [Function: bound noop],
        info: [Function: bound LOG],
        warn: [Function: bound LOG],
        error: [Function: bound LOG],
        fatal: [Function: bound ],
        levels: { labels: [Object], values: [Object] },
        silent: [Function: bound noop],
        constructor: [Function: bound Pino],
        child: [Function: bound child],
        bindings: [Function: bound bindings],
        setBindings: [Function: bound setBindings],
        flush: [Function: bound flush],
        isLevelEnabled: [Function: bound isLevelEnabled],
        version: '6.14.0',
        level: 'info',
        levelVal: 30,
        _events: undefined,
        _eventsCount: 0,
        _maxListeners: undefined,
        setMaxListeners: [Function: bound setMaxListeners],
        getMaxListeners: [Function: bound getMaxListeners],
        emit: [Function: bound emit],
        addListener: [Function: bound addListener],
        on: [Function: bound addListener],
        prependListener: [Function: bound prependListener],
        once: [Function: bound once],
        prependOnceListener: [Function: bound prependOnceListener],
        removeListener: [Function: bound removeListener],
        off: [Function: bound removeListener],
        removeAllListeners: [Function: bound removeAllListeners],
        listeners: [Function: bound listeners],
        rawListeners: [Function: bound rawListeners],
        listenerCount: [Function: bound listenerCount],
        eventNames: [Function: bound eventNames]
      }
    }

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:146:11)
          at async Promise.all (index 0)

INFO (event): Synchronizing tag ciflow/trunk/5 to head sha 600835c72e2462ea095cf19f1fabe39488dd0d53
    id: "123"
INFO (event): Found matching tags
    0: {
      "ref": "refs/tags/ciflow/trunk/5",
      "node_id": "123",
      "object": {
        "sha": "abc"
      }
    }
    id: "123"
INFO (event): deleting out of date tag ciflow/trunk/5 on sha abc
    id: "123"
INFO (event): Creating tag ciflow/trunk/5 on head sha 600835c72e2462ea095cf19f1fabe39488dd0d53
    id: "123"
INFO (event): Cleaning up tag ciflow/trunk/5
    id: "123"
INFO (event): Deleting tag ciflow/trunk/5 on sha abc
    id: "123"
INFO (event): Found labels on PR
    0: "ciflow/test"
    1: "ciflow/1"
    id: "123"
INFO (event): Synchronizing tag ciflow/test/3 to head sha b0ce2beb310558f90fa4adb797069025ec6ff7c9
    id: "123"
INFO (event): Synchronizing tag ciflow/1/3 to head sha b0ce2beb310558f90fa4adb797069025ec6ff7c9
    id: "123"
INFO (event): Found matching tags
    0: {
      "ref": "refs/tags/ciflow/test/3",
      "node_id": "123",
      "object": {
        "sha": "abc"
      }
    }
    id: "123"
INFO (event): deleting out of date tag ciflow/test/3 on sha abc
    id: "123"
INFO (event): Found matching tags
    0: {
      "ref": "refs/tags/ciflow/1/3",
      "node_id": "123",
      "object": {
        "sha": "abc"
      }
    }
    id: "123"
INFO (event): deleting out of date tag ciflow/1/3 on sha abc
    id: "123"
INFO (event): Creating tag ciflow/test/3 on head sha b0ce2beb310558f90fa4adb797069025ec6ff7c9
    id: "123"
INFO (event): Creating tag ciflow/1/3 on head sha b0ce2beb310558f90fa4adb797069025ec6ff7c9
    id: "123"
INFO (event): END Processing sync event
    id: "123"
INFO (event): Found labels on PR
    0: "ciflow/test"
    1: "ciflow/1"
    id: "123"
INFO (event): Cleaning up tag ciflow/test/3
    id: "123"
INFO (event): Cleaning up tag ciflow/1/3
    id: "123"
INFO (event): Deleting tag ciflow/test/3 on sha abc
    id: "123"
INFO (event): Deleting tag ciflow/1/3 on sha abc
    id: "123"
  console.log
    context is

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:145:11)
          at async Promise.all (index 0)

  console.log
    Context {
      name: 'pull_request',
      id: '123',
      payload: {
        action: 'labeled',
        number: 5,
        pull_request: {
          url: 'https://api.github.com/repos/suo/actions-test/pulls/5',
          id: 807065505,
          node_id: 'PR_kwDOGjcVQM4wGteh',
          html_url: 'https://github.com/suo/actions-test/pull/5',
          diff_url: 'https://github.com/suo/actions-test/pull/5.diff',
          patch_url: 'https://github.com/suo/actions-test/pull/5.patch',
          issue_url: 'https://api.github.com/repos/suo/actions-test/issues/5',
          number: 5,
          state: 'open',
          locked: false,
          title: 'Suo patch 1',
          user: [Object],
          body: null,
          created_at: '2021-12-20T23:18:22Z',
          updated_at: '2022-01-06T02:46:07Z',
          closed_at: null,
          merged_at: null,
          merge_commit_sha: '4edd5906e4c44ac7e83d5de64019d750e8ec123d',
          assignee: null,
          assignees: [],
          requested_reviewers: [],
          requested_teams: [],
          labels: [Array],
          milestone: null,
          draft: false,
          commits_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/commits',
          review_comments_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/comments',
          review_comment_url: 'https://api.github.com/repos/suo/actions-test/pulls/comments{/number}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/issues/5/comments',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/600835c72e2462ea095cf19f1fabe39488dd0d53',
          head: [Object],
          base: [Object],
          _links: [Object],
          author_association: 'OWNER',
          auto_merge: null,
          active_lock_reason: null,
          merged: false,
          mergeable: true,
          rebaseable: true,
          mergeable_state: 'clean',
          merged_by: null,
          comments: 0,
          review_comments: 0,
          maintainer_can_modify: false,
          commits: 3,
          additions: 2,
          deletions: 0,
          changed_files: 1
        },
        label: {
          id: 3702625053,
          node_id: 'LA_kwDOGjcVQM7csZMd',
          url: 'https://api.github.com/repos/suo/actions-test/labels/ciflow/test',
          name: 'ciflow/test',
          color: 'E426F5',
          default: false,
          description: ''
        },
        repository: {
          id: 439817536,
          node_id: 'R_kgDOGjcVQA',
          name: 'actions-test',
          full_name: 'suo/actions-test',
          private: false,
          owner: [Object],
          html_url: 'https://github.com/suo/actions-test',
          description: null,
          fork: false,
          url: 'https://api.github.com/repos/suo/actions-test',
          forks_url: 'https://api.github.com/repos/suo/actions-test/forks',
          keys_url: 'https://api.github.com/repos/suo/actions-test/keys{/key_id}',
          collaborators_url: 'https://api.github.com/repos/suo/actions-test/collaborators{/collaborator}',
          teams_url: 'https://api.github.com/repos/suo/actions-test/teams',
          hooks_url: 'https://api.github.com/repos/suo/actions-test/hooks',
          issue_events_url: 'https://api.github.com/repos/suo/actions-test/issues/events{/number}',
          events_url: 'https://api.github.com/repos/suo/actions-test/events',
          assignees_url: 'https://api.github.com/repos/suo/actions-test/assignees{/user}',
          branches_url: 'https://api.github.com/repos/suo/actions-test/branches{/branch}',
          tags_url: 'https://api.github.com/repos/suo/actions-test/tags',
          blobs_url: 'https://api.github.com/repos/suo/actions-test/git/blobs{/sha}',
          git_tags_url: 'https://api.github.com/repos/suo/actions-test/git/tags{/sha}',
          git_refs_url: 'https://api.github.com/repos/suo/actions-test/git/refs{/sha}',
          trees_url: 'https://api.github.com/repos/suo/actions-test/git/trees{/sha}',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/{sha}',
          languages_url: 'https://api.github.com/repos/suo/actions-test/languages',
          stargazers_url: 'https://api.github.com/repos/suo/actions-test/stargazers',
          contributors_url: 'https://api.github.com/repos/suo/actions-test/contributors',
          subscribers_url: 'https://api.github.com/repos/suo/actions-test/subscribers',
          subscription_url: 'https://api.github.com/repos/suo/actions-test/subscription',
          commits_url: 'https://api.github.com/repos/suo/actions-test/commits{/sha}',
          git_commits_url: 'https://api.github.com/repos/suo/actions-test/git/commits{/sha}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/comments{/number}',
          issue_comment_url: 'https://api.github.com/repos/suo/actions-test/issues/comments{/number}',
          contents_url: 'https://api.github.com/repos/suo/actions-test/contents/{+path}',
          compare_url: 'https://api.github.com/repos/suo/actions-test/compare/{base}...{head}',
          merges_url: 'https://api.github.com/repos/suo/actions-test/merges',
          archive_url: 'https://api.github.com/repos/suo/actions-test/{archive_format}{/ref}',
          downloads_url: 'https://api.github.com/repos/suo/actions-test/downloads',
          issues_url: 'https://api.github.com/repos/suo/actions-test/issues{/number}',
          pulls_url: 'https://api.github.com/repos/suo/actions-test/pulls{/number}',
          milestones_url: 'https://api.github.com/repos/suo/actions-test/milestones{/number}',
          notifications_url: 'https://api.github.com/repos/suo/actions-test/notifications{?since,all,participating}',
          labels_url: 'https://api.github.com/repos/suo/actions-test/labels{/name}',
          releases_url: 'https://api.github.com/repos/suo/actions-test/releases{/id}',
          deployments_url: 'https://api.github.com/repos/suo/actions-test/deployments',
          created_at: '2021-12-19T08:58:01Z',
          updated_at: '2021-12-23T06:00:10Z',
          pushed_at: '2021-12-23T06:00:07Z',
          git_url: 'git://github.com/suo/actions-test.git',
          ssh_url: 'git@github.com:suo/actions-test.git',
          clone_url: 'https://github.com/suo/actions-test.git',
          svn_url: 'https://github.com/suo/actions-test',
          homepage: null,
          size: 4,
          stargazers_count: 0,
          watchers_count: 0,
          language: 'Python',
          has_issues: true,
          has_projects: true,
          has_downloads: true,
          has_wiki: true,
          has_pages: false,
          forks_count: 1,
          mirror_url: null,
          archived: false,
          disabled: false,
          open_issues_count: 4,
          license: null,
          allow_forking: true,
          is_template: false,
          topics: [],
          visibility: 'public',
          forks: 1,
          open_issues: 4,
          watchers: 0,
          default_branch: 'main'
        },
        sender: {
          login: 'suo',
          id: 1617424,
          node_id: 'MDQ6VXNlcjE2MTc0MjQ=',
          avatar_url: 'https://avatars.githubusercontent.com/u/1617424?v=4',
          gravatar_id: '',
          url: 'https://api.github.com/users/suo',
          html_url: 'https://github.com/suo',
          followers_url: 'https://api.github.com/users/suo/followers',
          following_url: 'https://api.github.com/users/suo/following{/other_user}',
          gists_url: 'https://api.github.com/users/suo/gists{/gist_id}',
          starred_url: 'https://api.github.com/users/suo/starred{/owner}{/repo}',
          subscriptions_url: 'https://api.github.com/users/suo/subscriptions',
          organizations_url: 'https://api.github.com/users/suo/orgs',
          repos_url: 'https://api.github.com/users/suo/repos',
          events_url: 'https://api.github.com/users/suo/events{/privacy}',
          received_events_url: 'https://api.github.com/users/suo/received_events',
          type: 'User',
          site_admin: false
        }
      },
      octokit: OctokitWithDefaults {
        request: [Function: newApi] {
          endpoint: [Function],
          defaults: [Function: bound withDefaults]
        },
        graphql: [Function: newApi] {
          defaults: [Function: bound withDefaults],
          endpoint: [Function]
        },
        log: {
          debug: [Function: bound noop],
          info: [Function: bound LOG],
          warn: [Function: bound LOG],
          error: [Function: bound LOG],
          trace: [Function: bound noop],
          fatal: [Function: bound ],
          levels: [Object],
          silent: [Function: bound noop],
          constructor: [Function: bound Pino],
          child: [Function: bound child],
          bindings: [Function: bound bindings],
          setBindings: [Function: bound setBindings],
          flush: [Function: bound flush],
          isLevelEnabled: [Function: bound isLevelEnabled],
          version: '6.14.0',
          level: 'info',
          levelVal: 30,
          _events: undefined,
          _eventsCount: 0,
          _maxListeners: undefined,
          setMaxListeners: [Function: bound setMaxListeners],
          getMaxListeners: [Function: bound getMaxListeners],
          emit: [Function: bound emit],
          addListener: [Function: bound addListener],
          on: [Function: bound addListener],
          prependListener: [Function: bound prependListener],
          once: [Function: bound once],
          prependOnceListener: [Function: bound prependOnceListener],
          removeListener: [Function: bound removeListener],
          off: [Function: bound removeListener],
          removeAllListeners: [Function: bound removeAllListeners],
          listeners: [Function: bound listeners],
          rawListeners: [Function: bound rawListeners],
          listenerCount: [Function: bound listenerCount],
          eventNames: [Function: bound eventNames]
        },
        hook: [Function: bound register] {
          api: [Object],
          remove: [Function: bound removeHook],
          before: [Function: bound addHook],
          error: [Function: bound addHook],
          after: [Function: bound addHook],
          wrap: [Function: bound addHook]
        },
        auth: [Function: bound auth] AsyncFunction {
          hook: [Function: bound hook] AsyncFunction
        },
        retry: { retryRequest: [Function: retryRequest] },
        paginate: [Function: bound paginate] { iterator: [Function: bound iterator] },
        actions: {
          addCustomLabelsToSelfHostedRunnerForOrg: [Function],
          addCustomLabelsToSelfHostedRunnerForRepo: [Function],
          addSelectedRepoToOrgSecret: [Function],
          approveWorkflowRun: [Function],
          cancelWorkflowRun: [Function],
          createOrUpdateEnvironmentSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          createRegistrationTokenForOrg: [Function],
          createRegistrationTokenForRepo: [Function],
          createRemoveTokenForOrg: [Function],
          createRemoveTokenForRepo: [Function],
          createWorkflowDispatch: [Function],
          deleteActionsCacheById: [Function],
          deleteActionsCacheByKey: [Function],
          deleteArtifact: [Function],
          deleteEnvironmentSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          deleteSelfHostedRunnerFromOrg: [Function],
          deleteSelfHostedRunnerFromRepo: [Function],
          deleteWorkflowRun: [Function],
          deleteWorkflowRunLogs: [Function],
          disableSelectedRepositoryGithubActionsOrganization: [Function],
          disableWorkflow: [Function],
          downloadArtifact: [Function],
          downloadJobLogsForWorkflowRun: [Function],
          downloadWorkflowRunAttemptLogs: [Function],
          downloadWorkflowRunLogs: [Function],
          enableSelectedRepositoryGithubActionsOrganization: [Function],
          enableWorkflow: [Function],
          getActionsCacheList: [Function],
          getActionsCacheUsage: [Function],
          getActionsCacheUsageByRepoForOrg: [Function],
          getActionsCacheUsageForEnterprise: [Function],
          getActionsCacheUsageForOrg: [Function],
          getAllowedActionsOrganization: [Function],
          getAllowedActionsRepository: [Function],
          getArtifact: [Function],
          getEnvironmentPublicKey: [Function],
          getEnvironmentSecret: [Function],
          getGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          getGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          getGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          getGithubActionsPermissionsOrganization: [Function],
          getGithubActionsPermissionsRepository: [Function],
          getJobForWorkflowRun: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getPendingDeploymentsForRun: [Function],
          getRepoPermissions: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getReviewsForRun: [Function],
          getSelfHostedRunnerForOrg: [Function],
          getSelfHostedRunnerForRepo: [Function],
          getWorkflow: [Function],
          getWorkflowAccessToRepository: [Function],
          getWorkflowRun: [Function],
          getWorkflowRunAttempt: [Function],
          getWorkflowRunUsage: [Function],
          getWorkflowUsage: [Function],
          listArtifactsForRepo: [Function],
          listEnvironmentSecrets: [Function],
          listJobsForWorkflowRun: [Function],
          listJobsForWorkflowRunAttempt: [Function],
          listLabelsForSelfHostedRunnerForOrg: [Function],
          listLabelsForSelfHostedRunnerForRepo: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listRepoWorkflows: [Function],
          listRunnerApplicationsForOrg: [Function],
          listRunnerApplicationsForRepo: [Function],
          listSelectedReposForOrgSecret: [Function],
          listSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          listSelfHostedRunnersForOrg: [Function],
          listSelfHostedRunnersForRepo: [Function],
          listWorkflowRunArtifacts: [Function],
          listWorkflowRuns: [Function],
          listWorkflowRunsForRepo: [Function],
          reRunJobForWorkflowRun: [Function],
          reRunWorkflow: [Function],
          reRunWorkflowFailedJobs: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForOrg: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForRepo: [Function],
          removeCustomLabelFromSelfHostedRunnerForOrg: [Function],
          removeCustomLabelFromSelfHostedRunnerForRepo: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          reviewPendingDeploymentsForRun: [Function],
          setAllowedActionsOrganization: [Function],
          setAllowedActionsRepository: [Function],
          setCustomLabelsForSelfHostedRunnerForOrg: [Function],
          setCustomLabelsForSelfHostedRunnerForRepo: [Function],
          setGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          setGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          setGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          setGithubActionsPermissionsOrganization: [Function],
          setGithubActionsPermissionsRepository: [Function],
          setSelectedReposForOrgSecret: [Function],
          setSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          setWorkflowAccessToRepository: [Function]
        },
        activity: {
          checkRepoIsStarredByAuthenticatedUser: [Function],
          deleteRepoSubscription: [Function],
          deleteThreadSubscription: [Function],
          getFeeds: [Function],
          getRepoSubscription: [Function],
          getThread: [Function],
          getThreadSubscriptionForAuthenticatedUser: [Function],
          listEventsForAuthenticatedUser: [Function],
          listNotificationsForAuthenticatedUser: [Function],
          listOrgEventsForAuthenticatedUser: [Function],
          listPublicEvents: [Function],
          listPublicEventsForRepoNetwork: [Function],
          listPublicEventsForUser: [Function],
          listPublicOrgEvents: [Function],
          listReceivedEventsForUser: [Function],
          listReceivedPublicEventsForUser: [Function],
          listRepoEvents: [Function],
          listRepoNotificationsForAuthenticatedUser: [Function],
          listReposStarredByAuthenticatedUser: [Function],
          listReposStarredByUser: [Function],
          listReposWatchedByUser: [Function],
          listStargazersForRepo: [Function],
          listWatchedReposForAuthenticatedUser: [Function],
          listWatchersForRepo: [Function],
          markNotificationsAsRead: [Function],
          markRepoNotificationsAsRead: [Function],
          markThreadAsRead: [Function],
          setRepoSubscription: [Function],
          setThreadSubscription: [Function],
          starRepoForAuthenticatedUser: [Function],
          unstarRepoForAuthenticatedUser: [Function]
        },
        apps: {
          addRepoToInstallation: [Function],
          addRepoToInstallationForAuthenticatedUser: [Function],
          checkToken: [Function],
          createFromManifest: [Function],
          createInstallationAccessToken: [Function],
          deleteAuthorization: [Function],
          deleteInstallation: [Function],
          deleteToken: [Function],
          getAuthenticated: [Function],
          getBySlug: [Function],
          getInstallation: [Function],
          getOrgInstallation: [Function],
          getRepoInstallation: [Function],
          getSubscriptionPlanForAccount: [Function],
          getSubscriptionPlanForAccountStubbed: [Function],
          getUserInstallation: [Function],
          getWebhookConfigForApp: [Function],
          getWebhookDelivery: [Function],
          listAccountsForPlan: [Function],
          listAccountsForPlanStubbed: [Function],
          listInstallationReposForAuthenticatedUser: [Function],
          listInstallations: [Function],
          listInstallationsForAuthenticatedUser: [Function],
          listPlans: [Function],
          listPlansStubbed: [Function],
          listReposAccessibleToInstallation: [Function],
          listSubscriptionsForAuthenticatedUser: [Function],
          listSubscriptionsForAuthenticatedUserStubbed: [Function],
          listWebhookDeliveries: [Function],
          redeliverWebhookDelivery: [Function],
          removeRepoFromInstallation: [Function],
          removeRepoFromInstallationForAuthenticatedUser: [Function],
          resetToken: [Function],
          revokeInstallationAccessToken: [Function],
          scopeToken: [Function],
          suspendInstallation: [Function],
          unsuspendInstallation: [Function],
          updateWebhookConfigForApp: [Function]
        },
        billing: {
          getGithubActionsBillingOrg: [Function],
          getGithubActionsBillingUser: [Function],
          getGithubAdvancedSecurityBillingGhe: [Function],
          getGithubAdvancedSecurityBillingOrg: [Function],
          getGithubPackagesBillingOrg: [Function],
          getGithubPackagesBillingUser: [Function],
          getSharedStorageBillingOrg: [Function],
          getSharedStorageBillingUser: [Function]
        },
        checks: {
          create: [Function],
          createSuite: [Function],
          get: [Function],
          getSuite: [Function],
          listAnnotations: [Function],
          listForRef: [Function],
          listForSuite: [Function],
          listSuitesForRef: [Function],
          rerequestRun: [Function],
          rerequestSuite: [Function],
          setSuitesPreferences: [Function],
          update: [Function]
        },
        codeScanning: {
          deleteAnalysis: [Function],
          getAlert: [Function],
          getAnalysis: [Function],
          getSarif: [Function],
          listAlertInstances: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listAlertsInstances: [Function],
          listRecentAnalyses: [Function],
          updateAlert: [Function],
          uploadSarif: [Function]
        },
        codesOfConduct: { getAllCodesOfConduct: [Function], getConductCode: [Function] },
        codespaces: {
          addRepositoryForSecretForAuthenticatedUser: [Function],
          codespaceMachinesForAuthenticatedUser: [Function],
          createForAuthenticatedUser: [Function],
          createOrUpdateRepoSecret: [Function],
          createOrUpdateSecretForAuthenticatedUser: [Function],
          createWithPrForAuthenticatedUser: [Function],
          createWithRepoForAuthenticatedUser: [Function],
          deleteForAuthenticatedUser: [Function],
          deleteFromOrganization: [Function],
          deleteRepoSecret: [Function],
          deleteSecretForAuthenticatedUser: [Function],
          exportForAuthenticatedUser: [Function],
          getExportDetailsForAuthenticatedUser: [Function],
          getForAuthenticatedUser: [Function],
          getPublicKeyForAuthenticatedUser: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getSecretForAuthenticatedUser: [Function],
          listDevcontainersInRepositoryForAuthenticatedUser: [Function],
          listForAuthenticatedUser: [Function],
          listInOrganization: [Function],
          listInRepositoryForAuthenticatedUser: [Function],
          listRepoSecrets: [Function],
          listRepositoriesForSecretForAuthenticatedUser: [Function],
          listSecretsForAuthenticatedUser: [Function],
          removeRepositoryForSecretForAuthenticatedUser: [Function],
          repoMachinesForAuthenticatedUser: [Function],
          setRepositoriesForSecretForAuthenticatedUser: [Function],
          startForAuthenticatedUser: [Function],
          stopForAuthenticatedUser: [Function],
          stopInOrganization: [Function],
          updateForAuthenticatedUser: [Function]
        },
        dependabot: {
          addSelectedRepoToOrgSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listSelectedReposForOrgSecret: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          setSelectedReposForOrgSecret: [Function]
        },
        dependencyGraph: { createRepositorySnapshot: [Function], diffRange: [Function] },
        emojis: { get: [Function] },
        enterpriseAdmin: {
          addCustomLabelsToSelfHostedRunnerForEnterprise: [Function],
          disableSelectedOrganizationGithubActionsEnterprise: [Function],
          enableSelectedOrganizationGithubActionsEnterprise: [Function],
          getAllowedActionsEnterprise: [Function],
          getGithubActionsPermissionsEnterprise: [Function],
          getServerStatistics: [Function],
          listLabelsForSelfHostedRunnerForEnterprise: [Function],
          listSelectedOrganizationsEnabledGithubActionsEnterprise: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [Function],
          removeCustomLabelFromSelfHostedRunnerForEnterprise: [Function],
          setAllowedActionsEnterprise: [Function],
          setCustomLabelsForSelfHostedRunnerForEnterprise: [Function],
          setGithubActionsPermissionsEnterprise: [Function],
          setSelectedOrganizationsEnabledGithubActionsEnterprise: [Function]
        },
        gists: {
          checkIsStarred: [Function],
          create: [Function],
          createComment: [Function],
          delete: [Function],
          deleteComment: [Function],
          fork: [Function],
          get: [Function],
          getComment: [Function],
          getRevision: [Function],
          list: [Function],
          listComments: [Function],
          listCommits: [Function],
          listForUser: [Function],
          listForks: [Function],
          listPublic: [Function],
          listStarred: [Function],
          star: [Function],
          unstar: [Function],
          update: [Function],
          updateComment: [Function]
        },
        git: {
          createBlob: [Function],
          createCommit: [Function],
          createRef: [Function],
          createTag: [Function],
          createTree: [Function],
          deleteRef: [Function],
          getBlob: [Function],
          getCommit: [Function],
          getRef: [Function],
          getTag: [Function],
          getTree: [Function],
          listMatchingRefs: [Function],
          updateRef: [Function]
        },
        gitignore: { getAllTemplates: [Function], getTemplate: [Function] },
        interactions: {
          getRestrictionsForAuthenticatedUser: [Function],
          getRestrictionsForOrg: [Function],
          getRestrictionsForRepo: [Function],
          getRestrictionsForYourPublicRepos: [Function],
          removeRestrictionsForAuthenticatedUser: [Function],
          removeRestrictionsForOrg: [Function],
          removeRestrictionsForRepo: [Function],
          removeRestrictionsForYourPublicRepos: [Function],
          setRestrictionsForAuthenticatedUser: [Function],
          setRestrictionsForOrg: [Function],
          setRestrictionsForRepo: [Function],
          setRestrictionsForYourPublicRepos: [Function]
        },
        issues: {
          addAssignees: [Function],
          addLabels: [Function],
          checkUserCanBeAssigned: [Function],
          create: [Function],
          createComment: [Function],
          createLabel: [Function],
          createMilestone: [Function],
          deleteComment: [Function],
          deleteLabel: [Function],
          deleteMilestone: [Function],
          get: [Function],
          getComment: [Function],
          getEvent: [Function],
          getLabel: [Function],
          getMilestone: [Function],
          list: [Function],
          listAssignees: [Function],
          listComments: [Function],
          listCommentsForRepo: [Function],
          listEvents: [Function],
          listEventsForRepo: [Function],
          listEventsForTimeline: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listLabelsForMilestone: [Function],
          listLabelsForRepo: [Function],
          listLabelsOnIssue: [Function],
          listMilestones: [Function],
          lock: [Function],
          removeAllLabels: [Function],
          removeAssignees: [Function],
          removeLabel: [Function],
          setLabels: [Function],
          unlock: [Function],
          update: [Function],
          updateComment: [Function],
          updateLabel: [Function],
          updateMilestone: [Function]
        },
        licenses: {
          get: [Function],
          getAllCommonlyUsed: [Function],
          getForRepo: [Function]
        },
        markdown: { render: [Function], renderRaw: [Function] },
        meta: {
          get: [Function],
          getOctocat: [Function],
          getZen: [Function],
          root: [Function]
        },
        migrations: {
          cancelImport: [Function],
          deleteArchiveForAuthenticatedUser: [Function],
          deleteArchiveForOrg: [Function],
          downloadArchiveForOrg: [Function],
          getArchiveForAuthenticatedUser: [Function],
          getCommitAuthors: [Function],
          getImportStatus: [Function],
          getLargeFiles: [Function],
          getStatusForAuthenticatedUser: [Function],
          getStatusForOrg: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listReposForAuthenticatedUser: [Function],
          listReposForOrg: [Function],
          listReposForUser: [Function],
          mapCommitAuthor: [Function],
          setLfsPreference: [Function],
          startForAuthenticatedUser: [Function],
          startForOrg: [Function],
          startImport: [Function],
          unlockRepoForAuthenticatedUser: [Function],
          unlockRepoForOrg: [Function],
          updateImport: [Function]
        },
        orgs: {
          blockUser: [Function],
          cancelInvitation: [Function],
          checkBlockedUser: [Function],
          checkMembershipForUser: [Function],
          checkPublicMembershipForUser: [Function],
          convertMemberToOutsideCollaborator: [Function],
          createInvitation: [Function],
          createWebhook: [Function],
          deleteWebhook: [Function],
          get: [Function],
          getMembershipForAuthenticatedUser: [Function],
          getMembershipForUser: [Function],
          getWebhook: [Function],
          getWebhookConfigForOrg: [Function],
          getWebhookDelivery: [Function],
          list: [Function],
          listAppInstallations: [Function],
          listBlockedUsers: [Function],
          listCustomRoles: [Function],
          listFailedInvitations: [Function],
          listForAuthenticatedUser: [Function],
          listForUser: [Function],
          listInvitationTeams: [Function],
          listMembers: [Function],
          listMembershipsForAuthenticatedUser: [Function],
          listOutsideCollaborators: [Function],
          listPendingInvitations: [Function],
          listPublicMembers: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeMember: [Function],
          removeMembershipForUser: [Function],
          removeOutsideCollaborator: [Function],
          removePublicMembershipForAuthenticatedUser: [Function],
          setMembershipForUser: [Function],
          setPublicMembershipForAuthenticatedUser: [Function],
          unblockUser: [Function],
          update: [Function],
          updateMembershipForAuthenticatedUser: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForOrg: [Function]
        },
        packages: {
          deletePackageForAuthenticatedUser: [Function],
          deletePackageForOrg: [Function],
          deletePackageForUser: [Function],
          deletePackageVersionForAuthenticatedUser: [Function],
          deletePackageVersionForOrg: [Function],
          deletePackageVersionForUser: [Function],
          getAllPackageVersionsForAPackageOwnedByAnOrg: [Function],
          getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByOrg: [Function],
          getAllPackageVersionsForPackageOwnedByUser: [Function],
          getPackageForAuthenticatedUser: [Function],
          getPackageForOrganization: [Function],
          getPackageForUser: [Function],
          getPackageVersionForAuthenticatedUser: [Function],
          getPackageVersionForOrganization: [Function],
          getPackageVersionForUser: [Function],
          listPackagesForAuthenticatedUser: [Function],
          listPackagesForOrganization: [Function],
          listPackagesForUser: [Function],
          restorePackageForAuthenticatedUser: [Function],
          restorePackageForOrg: [Function],
          restorePackageForUser: [Function],
          restorePackageVersionForAuthenticatedUser: [Function],
          restorePackageVersionForOrg: [Function],
          restorePackageVersionForUser: [Function]
        },
        projects: {
          addCollaborator: [Function],
          createCard: [Function],
          createColumn: [Function],
          createForAuthenticatedUser: [Function],
          createForOrg: [Function],
          createForRepo: [Function],
          delete: [Function],
          deleteCard: [Function],
          deleteColumn: [Function],
          get: [Function],
          getCard: [Function],
          getColumn: [Function],
          getPermissionForUser: [Function],
          listCards: [Function],
          listCollaborators: [Function],
          listColumns: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listForUser: [Function],
          moveCard: [Function],
          moveColumn: [Function],
          removeCollaborator: [Function],
          update: [Function],
          updateCard: [Function],
          updateColumn: [Function]
        },
        pulls: {
          checkIfMerged: [Function],
          create: [Function],
          createReplyForReviewComment: [Function],
          createReview: [Function],
          createReviewComment: [Function],
          deletePendingReview: [Function],
          deleteReviewComment: [Function],
          dismissReview: [Function],
          get: [Function],
          getReview: [Function],
          getReviewComment: [Function],
          list: [Function],
          listCommentsForReview: [Function],
          listCommits: [Function],
          listFiles: [Function],
          listRequestedReviewers: [Function],
          listReviewComments: [Function],
          listReviewCommentsForRepo: [Function],
          listReviews: [Function],
          merge: [Function],
          removeRequestedReviewers: [Function],
          requestReviewers: [Function],
          submitReview: [Function],
          update: [Function],
          updateBranch: [Function],
          updateReview: [Function],
          updateReviewComment: [Function]
        },
        rateLimit: { get: [Function] },
        reactions: {
          createForCommitComment: [Function],
          createForIssue: [Function],
          createForIssueComment: [Function],
          createForPullRequestReviewComment: [Function],
          createForRelease: [Function],
          createForTeamDiscussionCommentInOrg: [Function],
          createForTeamDiscussionInOrg: [Function],
          deleteForCommitComment: [Function],
          deleteForIssue: [Function],
          deleteForIssueComment: [Function],
          deleteForPullRequestComment: [Function],
          deleteForRelease: [Function],
          deleteForTeamDiscussion: [Function],
          deleteForTeamDiscussionComment: [Function],
          listForCommitComment: [Function],
          listForIssue: [Function],
          listForIssueComment: [Function],
          listForPullRequestReviewComment: [Function],
          listForRelease: [Function],
          listForTeamDiscussionCommentInOrg: [Function],
          listForTeamDiscussionInOrg: [Function]
        },
        repos: {
          acceptInvitation: [Function],
          acceptInvitationForAuthenticatedUser: [Function],
          addAppAccessRestrictions: [Function],
          addCollaborator: [Function],
          addStatusCheckContexts: [Function],
          addTeamAccessRestrictions: [Function],
          addUserAccessRestrictions: [Function],
          checkCollaborator: [Function],
          checkVulnerabilityAlerts: [Function],
          codeownersErrors: [Function],
          compareCommits: [Function],
          compareCommitsWithBasehead: [Function],
          createAutolink: [Function],
          createCommitComment: [Function],
          createCommitSignatureProtection: [Function],
          createCommitStatus: [Function],
          createDeployKey: [Function],
          createDeployment: [Function],
          createDeploymentStatus: [Function],
          createDispatchEvent: [Function],
          createForAuthenticatedUser: [Function],
          createFork: [Function],
          createInOrg: [Function],
          createOrUpdateEnvironment: [Function],
          createOrUpdateFileContents: [Function],
          createPagesSite: [Function],
          createRelease: [Function],
          createTagProtection: [Function],
          createUsingTemplate: [Function],
          createWebhook: [Function],
          declineInvitation: [Function],
          declineInvitationForAuthenticatedUser: [Function],
          delete: [Function],
          deleteAccessRestrictions: [Function],
          deleteAdminBranchProtection: [Function],
          deleteAnEnvironment: [Function],
          deleteAutolink: [Function],
          deleteBranchProtection: [Function],
          deleteCommitComment: [Function],
          deleteCommitSignatureProtection: [Function],
          deleteDeployKey: [Function],
          deleteDeployment: [Function],
          deleteFile: [Function],
          deleteInvitation: [Function],
          deletePagesSite: [Function],
          deletePullRequestReviewProtection: [Function],
          deleteRelease: [Function],
          deleteReleaseAsset: [Function],
          deleteTagProtection: [Function],
          deleteWebhook: [Function],
          disableAutomatedSecurityFixes: [Function],
          disableLfsForRepo: [Function],
          disableVulnerabilityAlerts: [Function],
          downloadArchive: [Function],
          downloadTarballArchive: [Function],
          downloadZipballArchive: [Function],
          enableAutomatedSecurityFixes: [Function],
          enableLfsForRepo: [Function],
          enableVulnerabilityAlerts: [Function],
          generateReleaseNotes: [Function],
          get: [Function],
          getAccessRestrictions: [Function],
          getAdminBranchProtection: [Function],
          getAllEnvironments: [Function],
          getAllStatusCheckContexts: [Function],
          getAllTopics: [Function],
          getAppsWithAccessToProtectedBranch: [Function],
          getAutolink: [Function],
          getBranch: [Function],
          getBranchProtection: [Function],
          getClones: [Function],
          getCodeFrequencyStats: [Function],
          getCollaboratorPermissionLevel: [Function],
          getCombinedStatusForRef: [Function],
          getCommit: [Function],
          getCommitActivityStats: [Function],
          getCommitComment: [Function],
          getCommitSignatureProtection: [Function],
          getCommunityProfileMetrics: [Function],
          getContent: [Function],
          getContributorsStats: [Function],
          getDeployKey: [Function],
          getDeployment: [Function],
          getDeploymentStatus: [Function],
          getEnvironment: [Function],
          getLatestPagesBuild: [Function],
          getLatestRelease: [Function],
          getPages: [Function],
          getPagesBuild: [Function],
          getPagesHealthCheck: [Function],
          getParticipationStats: [Function],
          getPullRequestReviewProtection: [Function],
          getPunchCardStats: [Function],
          getReadme: [Function],
          getReadmeInDirectory: [Function],
          getRelease: [Function],
          getReleaseAsset: [Function],
          getReleaseByTag: [Function],
          getStatusChecksProtection: [Function],
          getTeamsWithAccessToProtectedBranch: [Function],
          getTopPaths: [Function],
          getTopReferrers: [Function],
          getUsersWithAccessToProtectedBranch: [Function],
          getViews: [Function],
          getWebhook: [Function],
          getWebhookConfigForRepo: [Function],
          getWebhookDelivery: [Function],
          listAutolinks: [Function],
          listBranches: [Function],
          listBranchesForHeadCommit: [Function],
          listCollaborators: [Function],
          listCommentsForCommit: [Function],
          listCommitCommentsForRepo: [Function],
          listCommitStatusesForRef: [Function],
          listCommits: [Function],
          listContributors: [Function],
          listDeployKeys: [Function],
          listDeploymentStatuses: [Function],
          listDeployments: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForUser: [Function],
          listForks: [Function],
          listInvitations: [Function],
          listInvitationsForAuthenticatedUser: [Function],
          listLanguages: [Function],
          listPagesBuilds: [Function],
          listPublic: [Function],
          listPullRequestsAssociatedWithCommit: [Function],
          listReleaseAssets: [Function],
          listReleases: [Function],
          listTagProtection: [Function],
          listTags: [Function],
          listTeams: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          merge: [Function],
          mergeUpstream: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeAppAccessRestrictions: [Function],
          removeCollaborator: [Function],
          removeStatusCheckContexts: [Function],
          removeStatusCheckProtection: [Function],
          removeTeamAccessRestrictions: [Function],
          removeUserAccessRestrictions: [Function],
          renameBranch: [Function],
          replaceAllTopics: [Function],
          requestPagesBuild: [Function],
          setAdminBranchProtection: [Function],
          setAppAccessRestrictions: [Function],
          setStatusCheckContexts: [Function],
          setTeamAccessRestrictions: [Function],
          setUserAccessRestrictions: [Function],
          testPushWebhook: [Function],
          transfer: [Function],
          update: [Function],
          updateBranchProtection: [Function],
          updateCommitComment: [Function],
          updateInformationAboutPagesSite: [Function],
          updateInvitation: [Function],
          updatePullRequestReviewProtection: [Function],
          updateRelease: [Function],
          updateReleaseAsset: [Function],
          updateStatusCheckPotection: [Function],
          updateStatusCheckProtection: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForRepo: [Function],
          uploadReleaseAsset: [Function]
        },
        search: {
          code: [Function],
          commits: [Function],
          issuesAndPullRequests: [Function],
          labels: [Function],
          repos: [Function],
          topics: [Function],
          users: [Function]
        },
        secretScanning: {
          getAlert: [Function],
          listAlertsForEnterprise: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listLocationsForAlert: [Function],
          updateAlert: [Function]
        },
        teams: {
          addOrUpdateMembershipForUserInOrg: [Function],
          addOrUpdateProjectPermissionsInOrg: [Function],
          addOrUpdateRepoPermissionsInOrg: [Function],
          checkPermissionsForProjectInOrg: [Function],
          checkPermissionsForRepoInOrg: [Function],
          create: [Function],
          createDiscussionCommentInOrg: [Function],
          createDiscussionInOrg: [Function],
          deleteDiscussionCommentInOrg: [Function],
          deleteDiscussionInOrg: [Function],
          deleteInOrg: [Function],
          getByName: [Function],
          getDiscussionCommentInOrg: [Function],
          getDiscussionInOrg: [Function],
          getMembershipForUserInOrg: [Function],
          list: [Function],
          listChildInOrg: [Function],
          listDiscussionCommentsInOrg: [Function],
          listDiscussionsInOrg: [Function],
          listForAuthenticatedUser: [Function],
          listMembersInOrg: [Function],
          listPendingInvitationsInOrg: [Function],
          listProjectsInOrg: [Function],
          listReposInOrg: [Function],
          removeMembershipForUserInOrg: [Function],
          removeProjectInOrg: [Function],
          removeRepoInOrg: [Function],
          updateDiscussionCommentInOrg: [Function],
          updateDiscussionInOrg: [Function],
          updateInOrg: [Function]
        },
        users: {
          addEmailForAuthenticated: [Function],
          addEmailForAuthenticatedUser: [Function],
          block: [Function],
          checkBlocked: [Function],
          checkFollowingForUser: [Function],
          checkPersonIsFollowedByAuthenticated: [Function],
          createGpgKeyForAuthenticated: [Function],
          createGpgKeyForAuthenticatedUser: [Function],
          createPublicSshKeyForAuthenticated: [Function],
          createPublicSshKeyForAuthenticatedUser: [Function],
          deleteEmailForAuthenticated: [Function],
          deleteEmailForAuthenticatedUser: [Function],
          deleteGpgKeyForAuthenticated: [Function],
          deleteGpgKeyForAuthenticatedUser: [Function],
          deletePublicSshKeyForAuthenticated: [Function],
          deletePublicSshKeyForAuthenticatedUser: [Function],
          follow: [Function],
          getAuthenticated: [Function],
          getByUsername: [Function],
          getContextForUser: [Function],
          getGpgKeyForAuthenticated: [Function],
          getGpgKeyForAuthenticatedUser: [Function],
          getPublicSshKeyForAuthenticated: [Function],
          getPublicSshKeyForAuthenticatedUser: [Function],
          list: [Function],
          listBlockedByAuthenticated: [Function],
          listBlockedByAuthenticatedUser: [Function],
          listEmailsForAuthenticated: [Function],
          listEmailsForAuthenticatedUser: [Function],
          listFollowedByAuthenticated: [Function],
          listFollowedByAuthenticatedUser: [Function],
          listFollowersForAuthenticatedUser: [Function],
          listFollowersForUser: [Function],
          listFollowingForUser: [Function],
          listGpgKeysForAuthenticated: [Function],
          listGpgKeysForAuthenticatedUser: [Function],
          listGpgKeysForUser: [Function],
          listPublicEmailsForAuthenticated: [Function],
          listPublicEmailsForAuthenticatedUser: [Function],
          listPublicKeysForUser: [Function],
          listPublicSshKeysForAuthenticated: [Function],
          listPublicSshKeysForAuthenticatedUser: [Function],
          setPrimaryEmailVisibilityForAuthenticated: [Function],
          setPrimaryEmailVisibilityForAuthenticatedUser: [Function],
          unblock: [Function],
          unfollow: [Function],
          updateAuthenticated: [Function]
        },
        rest: {
          actions: [Object],
          activity: [Object],
          apps: [Object],
          billing: [Object],
          checks: [Object],
          codeScanning: [Object],
          codesOfConduct: [Object],
          codespaces: [Object],
          dependabot: [Object],
          dependencyGraph: [Object],
          emojis: [Object],
          enterpriseAdmin: [Object],
          gists: [Object],
          git: [Object],
          gitignore: [Object],
          interactions: [Object],
          issues: [Object],
          licenses: [Object],
          markdown: [Object],
          meta: [Object],
          migrations: [Object],
          orgs: [Object],
          packages: [Object],
          projects: [Object],
          pulls: [Object],
          rateLimit: [Object],
          reactions: [Object],
          repos: [Object],
          search: [Object],
          secretScanning: [Object],
          teams: [Object],
          users: [Object]
        },
        config: { get: [AsyncFunction: get] }
      },
      log: [Function: logInfo] {
        trace: [Function: bound noop],
        debug: [Function: bound noop],
        info: [Function: bound LOG],
        warn: [Function: bound LOG],
        error: [Function: bound LOG],
        fatal: [Function: bound ],
        levels: { labels: [Object], values: [Object] },
        silent: [Function: bound noop],
        constructor: [Function: bound Pino],
        child: [Function: bound child],
        bindings: [Function: bound bindings],
        setBindings: [Function: bound setBindings],
        flush: [Function: bound flush],
        isLevelEnabled: [Function: bound isLevelEnabled],
        version: '6.14.0',
        level: 'info',
        levelVal: 30,
        _events: undefined,
        _eventsCount: 0,
        _maxListeners: undefined,
        setMaxListeners: [Function: bound setMaxListeners],
        getMaxListeners: [Function: bound getMaxListeners],
        emit: [Function: bound emit],
        addListener: [Function: bound addListener],
        on: [Function: bound addListener],
        prependListener: [Function: bound prependListener],
        once: [Function: bound once],
        prependOnceListener: [Function: bound prependOnceListener],
        removeListener: [Function: bound removeListener],
        off: [Function: bound removeListener],
        removeAllListeners: [Function: bound removeAllListeners],
        listeners: [Function: bound listeners],
        rawListeners: [Function: bound rawListeners],
        listenerCount: [Function: bound listenerCount],
        eventNames: [Function: bound eventNames]
      }
    }

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:146:11)
          at async Promise.all (index 0)

  console.log
    context is

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:145:11)
          at async Promise.all (index 0)

  console.log
    Context {
      name: 'pull_request',
      id: '123',
      payload: {
        action: 'labeled',
        number: 5,
        pull_request: {
          url: 'https://api.github.com/repos/suo/actions-test/pulls/5',
          id: 807065505,
          node_id: 'PR_kwDOGjcVQM4wGteh',
          html_url: 'https://github.com/suo/actions-test/pull/5',
          diff_url: 'https://github.com/suo/actions-test/pull/5.diff',
          patch_url: 'https://github.com/suo/actions-test/pull/5.patch',
          issue_url: 'https://api.github.com/repos/suo/actions-test/issues/5',
          number: 5,
          state: 'open',
          locked: false,
          title: 'Suo patch 1',
          user: [Object],
          body: null,
          created_at: '2021-12-20T23:18:22Z',
          updated_at: '2022-01-06T02:46:07Z',
          closed_at: null,
          merged_at: null,
          merge_commit_sha: '4edd5906e4c44ac7e83d5de64019d750e8ec123d',
          assignee: null,
          assignees: [],
          requested_reviewers: [],
          requested_teams: [],
          labels: [Array],
          milestone: null,
          draft: false,
          commits_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/commits',
          review_comments_url: 'https://api.github.com/repos/suo/actions-test/pulls/5/comments',
          review_comment_url: 'https://api.github.com/repos/suo/actions-test/pulls/comments{/number}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/issues/5/comments',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/600835c72e2462ea095cf19f1fabe39488dd0d53',
          head: [Object],
          base: [Object],
          _links: [Object],
          author_association: 'OWNER',
          auto_merge: null,
          active_lock_reason: null,
          merged: false,
          mergeable: true,
          rebaseable: true,
          mergeable_state: 'clean',
          merged_by: null,
          comments: 0,
          review_comments: 0,
          maintainer_can_modify: false,
          commits: 3,
          additions: 2,
          deletions: 0,
          changed_files: 1
        },
        label: {
          id: 3702625053,
          node_id: 'LA_kwDOGjcVQM7csZMd',
          url: 'https://api.github.com/repos/suo/actions-test/labels/ciflow/test',
          name: 'ciflow/test',
          color: 'E426F5',
          default: false,
          description: ''
        },
        repository: {
          id: 439817536,
          node_id: 'R_kgDOGjcVQA',
          name: 'actions-test',
          full_name: 'suo/actions-test',
          private: false,
          owner: [Object],
          html_url: 'https://github.com/suo/actions-test',
          description: null,
          fork: false,
          url: 'https://api.github.com/repos/suo/actions-test',
          forks_url: 'https://api.github.com/repos/suo/actions-test/forks',
          keys_url: 'https://api.github.com/repos/suo/actions-test/keys{/key_id}',
          collaborators_url: 'https://api.github.com/repos/suo/actions-test/collaborators{/collaborator}',
          teams_url: 'https://api.github.com/repos/suo/actions-test/teams',
          hooks_url: 'https://api.github.com/repos/suo/actions-test/hooks',
          issue_events_url: 'https://api.github.com/repos/suo/actions-test/issues/events{/number}',
          events_url: 'https://api.github.com/repos/suo/actions-test/events',
          assignees_url: 'https://api.github.com/repos/suo/actions-test/assignees{/user}',
          branches_url: 'https://api.github.com/repos/suo/actions-test/branches{/branch}',
          tags_url: 'https://api.github.com/repos/suo/actions-test/tags',
          blobs_url: 'https://api.github.com/repos/suo/actions-test/git/blobs{/sha}',
          git_tags_url: 'https://api.github.com/repos/suo/actions-test/git/tags{/sha}',
          git_refs_url: 'https://api.github.com/repos/suo/actions-test/git/refs{/sha}',
          trees_url: 'https://api.github.com/repos/suo/actions-test/git/trees{/sha}',
          statuses_url: 'https://api.github.com/repos/suo/actions-test/statuses/{sha}',
          languages_url: 'https://api.github.com/repos/suo/actions-test/languages',
          stargazers_url: 'https://api.github.com/repos/suo/actions-test/stargazers',
          contributors_url: 'https://api.github.com/repos/suo/actions-test/contributors',
          subscribers_url: 'https://api.github.com/repos/suo/actions-test/subscribers',
          subscription_url: 'https://api.github.com/repos/suo/actions-test/subscription',
          commits_url: 'https://api.github.com/repos/suo/actions-test/commits{/sha}',
          git_commits_url: 'https://api.github.com/repos/suo/actions-test/git/commits{/sha}',
          comments_url: 'https://api.github.com/repos/suo/actions-test/comments{/number}',
          issue_comment_url: 'https://api.github.com/repos/suo/actions-test/issues/comments{/number}',
          contents_url: 'https://api.github.com/repos/suo/actions-test/contents/{+path}',
          compare_url: 'https://api.github.com/repos/suo/actions-test/compare/{base}...{head}',
          merges_url: 'https://api.github.com/repos/suo/actions-test/merges',
          archive_url: 'https://api.github.com/repos/suo/actions-test/{archive_format}{/ref}',
          downloads_url: 'https://api.github.com/repos/suo/actions-test/downloads',
          issues_url: 'https://api.github.com/repos/suo/actions-test/issues{/number}',
          pulls_url: 'https://api.github.com/repos/suo/actions-test/pulls{/number}',
          milestones_url: 'https://api.github.com/repos/suo/actions-test/milestones{/number}',
          notifications_url: 'https://api.github.com/repos/suo/actions-test/notifications{?since,all,participating}',
          labels_url: 'https://api.github.com/repos/suo/actions-test/labels{/name}',
          releases_url: 'https://api.github.com/repos/suo/actions-test/releases{/id}',
          deployments_url: 'https://api.github.com/repos/suo/actions-test/deployments',
          created_at: '2021-12-19T08:58:01Z',
          updated_at: '2021-12-23T06:00:10Z',
          pushed_at: '2021-12-23T06:00:07Z',
          git_url: 'git://github.com/suo/actions-test.git',
          ssh_url: 'git@github.com:suo/actions-test.git',
          clone_url: 'https://github.com/suo/actions-test.git',
          svn_url: 'https://github.com/suo/actions-test',
          homepage: null,
          size: 4,
          stargazers_count: 0,
          watchers_count: 0,
          language: 'Python',
          has_issues: true,
          has_projects: true,
          has_downloads: true,
          has_wiki: true,
          has_pages: false,
          forks_count: 1,
          mirror_url: null,
          archived: false,
          disabled: false,
          open_issues_count: 4,
          license: null,
          allow_forking: true,
          is_template: false,
          topics: [],
          visibility: 'public',
          forks: 1,
          open_issues: 4,
          watchers: 0,
          default_branch: 'main'
        },
        sender: {
          login: 'suo',
          id: 1617424,
          node_id: 'MDQ6VXNlcjE2MTc0MjQ=',
          avatar_url: 'https://avatars.githubusercontent.com/u/1617424?v=4',
          gravatar_id: '',
          url: 'https://api.github.com/users/suo',
          html_url: 'https://github.com/suo',
          followers_url: 'https://api.github.com/users/suo/followers',
          following_url: 'https://api.github.com/users/suo/following{/other_user}',
          gists_url: 'https://api.github.com/users/suo/gists{/gist_id}',
          starred_url: 'https://api.github.com/users/suo/starred{/owner}{/repo}',
          subscriptions_url: 'https://api.github.com/users/suo/subscriptions',
          organizations_url: 'https://api.github.com/users/suo/orgs',
          repos_url: 'https://api.github.com/users/suo/repos',
          events_url: 'https://api.github.com/users/suo/events{/privacy}',
          received_events_url: 'https://api.github.com/users/suo/received_events',
          type: 'User',
          site_admin: false
        }
      },
      octokit: OctokitWithDefaults {
        request: [Function: newApi] {
          endpoint: [Function],
          defaults: [Function: bound withDefaults]
        },
        graphql: [Function: newApi] {
          defaults: [Function: bound withDefaults],
          endpoint: [Function]
        },
        log: {
          debug: [Function: bound noop],
          info: [Function: bound LOG],
          warn: [Function: bound LOG],
          error: [Function: bound LOG],
          trace: [Function: bound noop],
          fatal: [Function: bound ],
          levels: [Object],
          silent: [Function: bound noop],
          constructor: [Function: bound Pino],
          child: [Function: bound child],
          bindings: [Function: bound bindings],
          setBindings: [Function: bound setBindings],
          flush: [Function: bound flush],
          isLevelEnabled: [Function: bound isLevelEnabled],
          version: '6.14.0',
          level: 'info',
          levelVal: 30,
          _events: undefined,
          _eventsCount: 0,
          _maxListeners: undefined,
          setMaxListeners: [Function: bound setMaxListeners],
          getMaxListeners: [Function: bound getMaxListeners],
          emit: [Function: bound emit],
          addListener: [Function: bound addListener],
          on: [Function: bound addListener],
          prependListener: [Function: bound prependListener],
          once: [Function: bound once],
          prependOnceListener: [Function: bound prependOnceListener],
          removeListener: [Function: bound removeListener],
          off: [Function: bound removeListener],
          removeAllListeners: [Function: bound removeAllListeners],
          listeners: [Function: bound listeners],
          rawListeners: [Function: bound rawListeners],
          listenerCount: [Function: bound listenerCount],
          eventNames: [Function: bound eventNames]
        },
        hook: [Function: bound register] {
          api: [Object],
          remove: [Function: bound removeHook],
          before: [Function: bound addHook],
          error: [Function: bound addHook],
          after: [Function: bound addHook],
          wrap: [Function: bound addHook]
        },
        auth: [Function: bound auth] AsyncFunction {
          hook: [Function: bound hook] AsyncFunction
        },
        retry: { retryRequest: [Function: retryRequest] },
        paginate: [Function: bound paginate] { iterator: [Function: bound iterator] },
        actions: {
          addCustomLabelsToSelfHostedRunnerForOrg: [Function],
          addCustomLabelsToSelfHostedRunnerForRepo: [Function],
          addSelectedRepoToOrgSecret: [Function],
          approveWorkflowRun: [Function],
          cancelWorkflowRun: [Function],
          createOrUpdateEnvironmentSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          createRegistrationTokenForOrg: [Function],
          createRegistrationTokenForRepo: [Function],
          createRemoveTokenForOrg: [Function],
          createRemoveTokenForRepo: [Function],
          createWorkflowDispatch: [Function],
          deleteActionsCacheById: [Function],
          deleteActionsCacheByKey: [Function],
          deleteArtifact: [Function],
          deleteEnvironmentSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          deleteSelfHostedRunnerFromOrg: [Function],
          deleteSelfHostedRunnerFromRepo: [Function],
          deleteWorkflowRun: [Function],
          deleteWorkflowRunLogs: [Function],
          disableSelectedRepositoryGithubActionsOrganization: [Function],
          disableWorkflow: [Function],
          downloadArtifact: [Function],
          downloadJobLogsForWorkflowRun: [Function],
          downloadWorkflowRunAttemptLogs: [Function],
          downloadWorkflowRunLogs: [Function],
          enableSelectedRepositoryGithubActionsOrganization: [Function],
          enableWorkflow: [Function],
          getActionsCacheList: [Function],
          getActionsCacheUsage: [Function],
          getActionsCacheUsageByRepoForOrg: [Function],
          getActionsCacheUsageForEnterprise: [Function],
          getActionsCacheUsageForOrg: [Function],
          getAllowedActionsOrganization: [Function],
          getAllowedActionsRepository: [Function],
          getArtifact: [Function],
          getEnvironmentPublicKey: [Function],
          getEnvironmentSecret: [Function],
          getGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          getGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          getGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          getGithubActionsPermissionsOrganization: [Function],
          getGithubActionsPermissionsRepository: [Function],
          getJobForWorkflowRun: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getPendingDeploymentsForRun: [Function],
          getRepoPermissions: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getReviewsForRun: [Function],
          getSelfHostedRunnerForOrg: [Function],
          getSelfHostedRunnerForRepo: [Function],
          getWorkflow: [Function],
          getWorkflowAccessToRepository: [Function],
          getWorkflowRun: [Function],
          getWorkflowRunAttempt: [Function],
          getWorkflowRunUsage: [Function],
          getWorkflowUsage: [Function],
          listArtifactsForRepo: [Function],
          listEnvironmentSecrets: [Function],
          listJobsForWorkflowRun: [Function],
          listJobsForWorkflowRunAttempt: [Function],
          listLabelsForSelfHostedRunnerForOrg: [Function],
          listLabelsForSelfHostedRunnerForRepo: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listRepoWorkflows: [Function],
          listRunnerApplicationsForOrg: [Function],
          listRunnerApplicationsForRepo: [Function],
          listSelectedReposForOrgSecret: [Function],
          listSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          listSelfHostedRunnersForOrg: [Function],
          listSelfHostedRunnersForRepo: [Function],
          listWorkflowRunArtifacts: [Function],
          listWorkflowRuns: [Function],
          listWorkflowRunsForRepo: [Function],
          reRunJobForWorkflowRun: [Function],
          reRunWorkflow: [Function],
          reRunWorkflowFailedJobs: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForOrg: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForRepo: [Function],
          removeCustomLabelFromSelfHostedRunnerForOrg: [Function],
          removeCustomLabelFromSelfHostedRunnerForRepo: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          reviewPendingDeploymentsForRun: [Function],
          setAllowedActionsOrganization: [Function],
          setAllowedActionsRepository: [Function],
          setCustomLabelsForSelfHostedRunnerForOrg: [Function],
          setCustomLabelsForSelfHostedRunnerForRepo: [Function],
          setGithubActionsDefaultWorkflowPermissionsEnterprise: [Function],
          setGithubActionsDefaultWorkflowPermissionsOrganization: [Function],
          setGithubActionsDefaultWorkflowPermissionsRepository: [Function],
          setGithubActionsPermissionsOrganization: [Function],
          setGithubActionsPermissionsRepository: [Function],
          setSelectedReposForOrgSecret: [Function],
          setSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
          setWorkflowAccessToRepository: [Function]
        },
        activity: {
          checkRepoIsStarredByAuthenticatedUser: [Function],
          deleteRepoSubscription: [Function],
          deleteThreadSubscription: [Function],
          getFeeds: [Function],
          getRepoSubscription: [Function],
          getThread: [Function],
          getThreadSubscriptionForAuthenticatedUser: [Function],
          listEventsForAuthenticatedUser: [Function],
          listNotificationsForAuthenticatedUser: [Function],
          listOrgEventsForAuthenticatedUser: [Function],
          listPublicEvents: [Function],
          listPublicEventsForRepoNetwork: [Function],
          listPublicEventsForUser: [Function],
          listPublicOrgEvents: [Function],
          listReceivedEventsForUser: [Function],
          listReceivedPublicEventsForUser: [Function],
          listRepoEvents: [Function],
          listRepoNotificationsForAuthenticatedUser: [Function],
          listReposStarredByAuthenticatedUser: [Function],
          listReposStarredByUser: [Function],
          listReposWatchedByUser: [Function],
          listStargazersForRepo: [Function],
          listWatchedReposForAuthenticatedUser: [Function],
          listWatchersForRepo: [Function],
          markNotificationsAsRead: [Function],
          markRepoNotificationsAsRead: [Function],
          markThreadAsRead: [Function],
          setRepoSubscription: [Function],
          setThreadSubscription: [Function],
          starRepoForAuthenticatedUser: [Function],
          unstarRepoForAuthenticatedUser: [Function]
        },
        apps: {
          addRepoToInstallation: [Function],
          addRepoToInstallationForAuthenticatedUser: [Function],
          checkToken: [Function],
          createFromManifest: [Function],
          createInstallationAccessToken: [Function],
          deleteAuthorization: [Function],
          deleteInstallation: [Function],
          deleteToken: [Function],
          getAuthenticated: [Function],
          getBySlug: [Function],
          getInstallation: [Function],
          getOrgInstallation: [Function],
          getRepoInstallation: [Function],
          getSubscriptionPlanForAccount: [Function],
          getSubscriptionPlanForAccountStubbed: [Function],
          getUserInstallation: [Function],
          getWebhookConfigForApp: [Function],
          getWebhookDelivery: [Function],
          listAccountsForPlan: [Function],
          listAccountsForPlanStubbed: [Function],
          listInstallationReposForAuthenticatedUser: [Function],
          listInstallations: [Function],
          listInstallationsForAuthenticatedUser: [Function],
          listPlans: [Function],
          listPlansStubbed: [Function],
          listReposAccessibleToInstallation: [Function],
          listSubscriptionsForAuthenticatedUser: [Function],
          listSubscriptionsForAuthenticatedUserStubbed: [Function],
          listWebhookDeliveries: [Function],
          redeliverWebhookDelivery: [Function],
          removeRepoFromInstallation: [Function],
          removeRepoFromInstallationForAuthenticatedUser: [Function],
          resetToken: [Function],
          revokeInstallationAccessToken: [Function],
          scopeToken: [Function],
          suspendInstallation: [Function],
          unsuspendInstallation: [Function],
          updateWebhookConfigForApp: [Function]
        },
        billing: {
          getGithubActionsBillingOrg: [Function],
          getGithubActionsBillingUser: [Function],
          getGithubAdvancedSecurityBillingGhe: [Function],
          getGithubAdvancedSecurityBillingOrg: [Function],
          getGithubPackagesBillingOrg: [Function],
          getGithubPackagesBillingUser: [Function],
          getSharedStorageBillingOrg: [Function],
          getSharedStorageBillingUser: [Function]
        },
        checks: {
          create: [Function],
          createSuite: [Function],
          get: [Function],
          getSuite: [Function],
          listAnnotations: [Function],
          listForRef: [Function],
          listForSuite: [Function],
          listSuitesForRef: [Function],
          rerequestRun: [Function],
          rerequestSuite: [Function],
          setSuitesPreferences: [Function],
          update: [Function]
        },
        codeScanning: {
          deleteAnalysis: [Function],
          getAlert: [Function],
          getAnalysis: [Function],
          getSarif: [Function],
          listAlertInstances: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listAlertsInstances: [Function],
          listRecentAnalyses: [Function],
          updateAlert: [Function],
          uploadSarif: [Function]
        },
        codesOfConduct: { getAllCodesOfConduct: [Function], getConductCode: [Function] },
        codespaces: {
          addRepositoryForSecretForAuthenticatedUser: [Function],
          codespaceMachinesForAuthenticatedUser: [Function],
          createForAuthenticatedUser: [Function],
          createOrUpdateRepoSecret: [Function],
          createOrUpdateSecretForAuthenticatedUser: [Function],
          createWithPrForAuthenticatedUser: [Function],
          createWithRepoForAuthenticatedUser: [Function],
          deleteForAuthenticatedUser: [Function],
          deleteFromOrganization: [Function],
          deleteRepoSecret: [Function],
          deleteSecretForAuthenticatedUser: [Function],
          exportForAuthenticatedUser: [Function],
          getExportDetailsForAuthenticatedUser: [Function],
          getForAuthenticatedUser: [Function],
          getPublicKeyForAuthenticatedUser: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          getSecretForAuthenticatedUser: [Function],
          listDevcontainersInRepositoryForAuthenticatedUser: [Function],
          listForAuthenticatedUser: [Function],
          listInOrganization: [Function],
          listInRepositoryForAuthenticatedUser: [Function],
          listRepoSecrets: [Function],
          listRepositoriesForSecretForAuthenticatedUser: [Function],
          listSecretsForAuthenticatedUser: [Function],
          removeRepositoryForSecretForAuthenticatedUser: [Function],
          repoMachinesForAuthenticatedUser: [Function],
          setRepositoriesForSecretForAuthenticatedUser: [Function],
          startForAuthenticatedUser: [Function],
          stopForAuthenticatedUser: [Function],
          stopInOrganization: [Function],
          updateForAuthenticatedUser: [Function]
        },
        dependabot: {
          addSelectedRepoToOrgSecret: [Function],
          createOrUpdateOrgSecret: [Function],
          createOrUpdateRepoSecret: [Function],
          deleteOrgSecret: [Function],
          deleteRepoSecret: [Function],
          getOrgPublicKey: [Function],
          getOrgSecret: [Function],
          getRepoPublicKey: [Function],
          getRepoSecret: [Function],
          listOrgSecrets: [Function],
          listRepoSecrets: [Function],
          listSelectedReposForOrgSecret: [Function],
          removeSelectedRepoFromOrgSecret: [Function],
          setSelectedReposForOrgSecret: [Function]
        },
        dependencyGraph: { createRepositorySnapshot: [Function], diffRange: [Function] },
        emojis: { get: [Function] },
        enterpriseAdmin: {
          addCustomLabelsToSelfHostedRunnerForEnterprise: [Function],
          disableSelectedOrganizationGithubActionsEnterprise: [Function],
          enableSelectedOrganizationGithubActionsEnterprise: [Function],
          getAllowedActionsEnterprise: [Function],
          getGithubActionsPermissionsEnterprise: [Function],
          getServerStatistics: [Function],
          listLabelsForSelfHostedRunnerForEnterprise: [Function],
          listSelectedOrganizationsEnabledGithubActionsEnterprise: [Function],
          removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [Function],
          removeCustomLabelFromSelfHostedRunnerForEnterprise: [Function],
          setAllowedActionsEnterprise: [Function],
          setCustomLabelsForSelfHostedRunnerForEnterprise: [Function],
          setGithubActionsPermissionsEnterprise: [Function],
          setSelectedOrganizationsEnabledGithubActionsEnterprise: [Function]
        },
        gists: {
          checkIsStarred: [Function],
          create: [Function],
          createComment: [Function],
          delete: [Function],
          deleteComment: [Function],
          fork: [Function],
          get: [Function],
          getComment: [Function],
          getRevision: [Function],
          list: [Function],
          listComments: [Function],
          listCommits: [Function],
          listForUser: [Function],
          listForks: [Function],
          listPublic: [Function],
          listStarred: [Function],
          star: [Function],
          unstar: [Function],
          update: [Function],
          updateComment: [Function]
        },
        git: {
          createBlob: [Function],
          createCommit: [Function],
          createRef: [Function],
          createTag: [Function],
          createTree: [Function],
          deleteRef: [Function],
          getBlob: [Function],
          getCommit: [Function],
          getRef: [Function],
          getTag: [Function],
          getTree: [Function],
          listMatchingRefs: [Function],
          updateRef: [Function]
        },
        gitignore: { getAllTemplates: [Function], getTemplate: [Function] },
        interactions: {
          getRestrictionsForAuthenticatedUser: [Function],
          getRestrictionsForOrg: [Function],
          getRestrictionsForRepo: [Function],
          getRestrictionsForYourPublicRepos: [Function],
          removeRestrictionsForAuthenticatedUser: [Function],
          removeRestrictionsForOrg: [Function],
          removeRestrictionsForRepo: [Function],
          removeRestrictionsForYourPublicRepos: [Function],
          setRestrictionsForAuthenticatedUser: [Function],
          setRestrictionsForOrg: [Function],
          setRestrictionsForRepo: [Function],
          setRestrictionsForYourPublicRepos: [Function]
        },
        issues: {
          addAssignees: [Function],
          addLabels: [Function],
          checkUserCanBeAssigned: [Function],
          create: [Function],
          createComment: [Function],
          createLabel: [Function],
          createMilestone: [Function],
          deleteComment: [Function],
          deleteLabel: [Function],
          deleteMilestone: [Function],
          get: [Function],
          getComment: [Function],
          getEvent: [Function],
          getLabel: [Function],
          getMilestone: [Function],
          list: [Function],
          listAssignees: [Function],
          listComments: [Function],
          listCommentsForRepo: [Function],
          listEvents: [Function],
          listEventsForRepo: [Function],
          listEventsForTimeline: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listLabelsForMilestone: [Function],
          listLabelsForRepo: [Function],
          listLabelsOnIssue: [Function],
          listMilestones: [Function],
          lock: [Function],
          removeAllLabels: [Function],
          removeAssignees: [Function],
          removeLabel: [Function],
          setLabels: [Function],
          unlock: [Function],
          update: [Function],
          updateComment: [Function],
          updateLabel: [Function],
          updateMilestone: [Function]
        },
        licenses: {
          get: [Function],
          getAllCommonlyUsed: [Function],
          getForRepo: [Function]
        },
        markdown: { render: [Function], renderRaw: [Function] },
        meta: {
          get: [Function],
          getOctocat: [Function],
          getZen: [Function],
          root: [Function]
        },
        migrations: {
          cancelImport: [Function],
          deleteArchiveForAuthenticatedUser: [Function],
          deleteArchiveForOrg: [Function],
          downloadArchiveForOrg: [Function],
          getArchiveForAuthenticatedUser: [Function],
          getCommitAuthors: [Function],
          getImportStatus: [Function],
          getLargeFiles: [Function],
          getStatusForAuthenticatedUser: [Function],
          getStatusForOrg: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listReposForAuthenticatedUser: [Function],
          listReposForOrg: [Function],
          listReposForUser: [Function],
          mapCommitAuthor: [Function],
          setLfsPreference: [Function],
          startForAuthenticatedUser: [Function],
          startForOrg: [Function],
          startImport: [Function],
          unlockRepoForAuthenticatedUser: [Function],
          unlockRepoForOrg: [Function],
          updateImport: [Function]
        },
        orgs: {
          blockUser: [Function],
          cancelInvitation: [Function],
          checkBlockedUser: [Function],
          checkMembershipForUser: [Function],
          checkPublicMembershipForUser: [Function],
          convertMemberToOutsideCollaborator: [Function],
          createInvitation: [Function],
          createWebhook: [Function],
          deleteWebhook: [Function],
          get: [Function],
          getMembershipForAuthenticatedUser: [Function],
          getMembershipForUser: [Function],
          getWebhook: [Function],
          getWebhookConfigForOrg: [Function],
          getWebhookDelivery: [Function],
          list: [Function],
          listAppInstallations: [Function],
          listBlockedUsers: [Function],
          listCustomRoles: [Function],
          listFailedInvitations: [Function],
          listForAuthenticatedUser: [Function],
          listForUser: [Function],
          listInvitationTeams: [Function],
          listMembers: [Function],
          listMembershipsForAuthenticatedUser: [Function],
          listOutsideCollaborators: [Function],
          listPendingInvitations: [Function],
          listPublicMembers: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeMember: [Function],
          removeMembershipForUser: [Function],
          removeOutsideCollaborator: [Function],
          removePublicMembershipForAuthenticatedUser: [Function],
          setMembershipForUser: [Function],
          setPublicMembershipForAuthenticatedUser: [Function],
          unblockUser: [Function],
          update: [Function],
          updateMembershipForAuthenticatedUser: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForOrg: [Function]
        },
        packages: {
          deletePackageForAuthenticatedUser: [Function],
          deletePackageForOrg: [Function],
          deletePackageForUser: [Function],
          deletePackageVersionForAuthenticatedUser: [Function],
          deletePackageVersionForOrg: [Function],
          deletePackageVersionForUser: [Function],
          getAllPackageVersionsForAPackageOwnedByAnOrg: [Function],
          getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [Function],
          getAllPackageVersionsForPackageOwnedByOrg: [Function],
          getAllPackageVersionsForPackageOwnedByUser: [Function],
          getPackageForAuthenticatedUser: [Function],
          getPackageForOrganization: [Function],
          getPackageForUser: [Function],
          getPackageVersionForAuthenticatedUser: [Function],
          getPackageVersionForOrganization: [Function],
          getPackageVersionForUser: [Function],
          listPackagesForAuthenticatedUser: [Function],
          listPackagesForOrganization: [Function],
          listPackagesForUser: [Function],
          restorePackageForAuthenticatedUser: [Function],
          restorePackageForOrg: [Function],
          restorePackageForUser: [Function],
          restorePackageVersionForAuthenticatedUser: [Function],
          restorePackageVersionForOrg: [Function],
          restorePackageVersionForUser: [Function]
        },
        projects: {
          addCollaborator: [Function],
          createCard: [Function],
          createColumn: [Function],
          createForAuthenticatedUser: [Function],
          createForOrg: [Function],
          createForRepo: [Function],
          delete: [Function],
          deleteCard: [Function],
          deleteColumn: [Function],
          get: [Function],
          getCard: [Function],
          getColumn: [Function],
          getPermissionForUser: [Function],
          listCards: [Function],
          listCollaborators: [Function],
          listColumns: [Function],
          listForOrg: [Function],
          listForRepo: [Function],
          listForUser: [Function],
          moveCard: [Function],
          moveColumn: [Function],
          removeCollaborator: [Function],
          update: [Function],
          updateCard: [Function],
          updateColumn: [Function]
        },
        pulls: {
          checkIfMerged: [Function],
          create: [Function],
          createReplyForReviewComment: [Function],
          createReview: [Function],
          createReviewComment: [Function],
          deletePendingReview: [Function],
          deleteReviewComment: [Function],
          dismissReview: [Function],
          get: [Function],
          getReview: [Function],
          getReviewComment: [Function],
          list: [Function],
          listCommentsForReview: [Function],
          listCommits: [Function],
          listFiles: [Function],
          listRequestedReviewers: [Function],
          listReviewComments: [Function],
          listReviewCommentsForRepo: [Function],
          listReviews: [Function],
          merge: [Function],
          removeRequestedReviewers: [Function],
          requestReviewers: [Function],
          submitReview: [Function],
          update: [Function],
          updateBranch: [Function],
          updateReview: [Function],
          updateReviewComment: [Function]
        },
        rateLimit: { get: [Function] },
        reactions: {
          createForCommitComment: [Function],
          createForIssue: [Function],
          createForIssueComment: [Function],
          createForPullRequestReviewComment: [Function],
          createForRelease: [Function],
          createForTeamDiscussionCommentInOrg: [Function],
          createForTeamDiscussionInOrg: [Function],
          deleteForCommitComment: [Function],
          deleteForIssue: [Function],
          deleteForIssueComment: [Function],
          deleteForPullRequestComment: [Function],
          deleteForRelease: [Function],
          deleteForTeamDiscussion: [Function],
          deleteForTeamDiscussionComment: [Function],
          listForCommitComment: [Function],
          listForIssue: [Function],
          listForIssueComment: [Function],
          listForPullRequestReviewComment: [Function],
          listForRelease: [Function],
          listForTeamDiscussionCommentInOrg: [Function],
          listForTeamDiscussionInOrg: [Function]
        },
        repos: {
          acceptInvitation: [Function],
          acceptInvitationForAuthenticatedUser: [Function],
          addAppAccessRestrictions: [Function],
          addCollaborator: [Function],
          addStatusCheckContexts: [Function],
          addTeamAccessRestrictions: [Function],
          addUserAccessRestrictions: [Function],
          checkCollaborator: [Function],
          checkVulnerabilityAlerts: [Function],
          codeownersErrors: [Function],
          compareCommits: [Function],
          compareCommitsWithBasehead: [Function],
          createAutolink: [Function],
          createCommitComment: [Function],
          createCommitSignatureProtection: [Function],
          createCommitStatus: [Function],
          createDeployKey: [Function],
          createDeployment: [Function],
          createDeploymentStatus: [Function],
          createDispatchEvent: [Function],
          createForAuthenticatedUser: [Function],
          createFork: [Function],
          createInOrg: [Function],
          createOrUpdateEnvironment: [Function],
          createOrUpdateFileContents: [Function],
          createPagesSite: [Function],
          createRelease: [Function],
          createTagProtection: [Function],
          createUsingTemplate: [Function],
          createWebhook: [Function],
          declineInvitation: [Function],
          declineInvitationForAuthenticatedUser: [Function],
          delete: [Function],
          deleteAccessRestrictions: [Function],
          deleteAdminBranchProtection: [Function],
          deleteAnEnvironment: [Function],
          deleteAutolink: [Function],
          deleteBranchProtection: [Function],
          deleteCommitComment: [Function],
          deleteCommitSignatureProtection: [Function],
          deleteDeployKey: [Function],
          deleteDeployment: [Function],
          deleteFile: [Function],
          deleteInvitation: [Function],
          deletePagesSite: [Function],
          deletePullRequestReviewProtection: [Function],
          deleteRelease: [Function],
          deleteReleaseAsset: [Function],
          deleteTagProtection: [Function],
          deleteWebhook: [Function],
          disableAutomatedSecurityFixes: [Function],
          disableLfsForRepo: [Function],
          disableVulnerabilityAlerts: [Function],
          downloadArchive: [Function],
          downloadTarballArchive: [Function],
          downloadZipballArchive: [Function],
          enableAutomatedSecurityFixes: [Function],
          enableLfsForRepo: [Function],
          enableVulnerabilityAlerts: [Function],
          generateReleaseNotes: [Function],
          get: [Function],
          getAccessRestrictions: [Function],
          getAdminBranchProtection: [Function],
          getAllEnvironments: [Function],
          getAllStatusCheckContexts: [Function],
          getAllTopics: [Function],
          getAppsWithAccessToProtectedBranch: [Function],
          getAutolink: [Function],
          getBranch: [Function],
          getBranchProtection: [Function],
          getClones: [Function],
          getCodeFrequencyStats: [Function],
          getCollaboratorPermissionLevel: [Function],
          getCombinedStatusForRef: [Function],
          getCommit: [Function],
          getCommitActivityStats: [Function],
          getCommitComment: [Function],
          getCommitSignatureProtection: [Function],
          getCommunityProfileMetrics: [Function],
          getContent: [Function],
          getContributorsStats: [Function],
          getDeployKey: [Function],
          getDeployment: [Function],
          getDeploymentStatus: [Function],
          getEnvironment: [Function],
          getLatestPagesBuild: [Function],
          getLatestRelease: [Function],
          getPages: [Function],
          getPagesBuild: [Function],
          getPagesHealthCheck: [Function],
          getParticipationStats: [Function],
          getPullRequestReviewProtection: [Function],
          getPunchCardStats: [Function],
          getReadme: [Function],
          getReadmeInDirectory: [Function],
          getRelease: [Function],
          getReleaseAsset: [Function],
          getReleaseByTag: [Function],
          getStatusChecksProtection: [Function],
          getTeamsWithAccessToProtectedBranch: [Function],
          getTopPaths: [Function],
          getTopReferrers: [Function],
          getUsersWithAccessToProtectedBranch: [Function],
          getViews: [Function],
          getWebhook: [Function],
          getWebhookConfigForRepo: [Function],
          getWebhookDelivery: [Function],
          listAutolinks: [Function],
          listBranches: [Function],
          listBranchesForHeadCommit: [Function],
          listCollaborators: [Function],
          listCommentsForCommit: [Function],
          listCommitCommentsForRepo: [Function],
          listCommitStatusesForRef: [Function],
          listCommits: [Function],
          listContributors: [Function],
          listDeployKeys: [Function],
          listDeploymentStatuses: [Function],
          listDeployments: [Function],
          listForAuthenticatedUser: [Function],
          listForOrg: [Function],
          listForUser: [Function],
          listForks: [Function],
          listInvitations: [Function],
          listInvitationsForAuthenticatedUser: [Function],
          listLanguages: [Function],
          listPagesBuilds: [Function],
          listPublic: [Function],
          listPullRequestsAssociatedWithCommit: [Function],
          listReleaseAssets: [Function],
          listReleases: [Function],
          listTagProtection: [Function],
          listTags: [Function],
          listTeams: [Function],
          listWebhookDeliveries: [Function],
          listWebhooks: [Function],
          merge: [Function],
          mergeUpstream: [Function],
          pingWebhook: [Function],
          redeliverWebhookDelivery: [Function],
          removeAppAccessRestrictions: [Function],
          removeCollaborator: [Function],
          removeStatusCheckContexts: [Function],
          removeStatusCheckProtection: [Function],
          removeTeamAccessRestrictions: [Function],
          removeUserAccessRestrictions: [Function],
          renameBranch: [Function],
          replaceAllTopics: [Function],
          requestPagesBuild: [Function],
          setAdminBranchProtection: [Function],
          setAppAccessRestrictions: [Function],
          setStatusCheckContexts: [Function],
          setTeamAccessRestrictions: [Function],
          setUserAccessRestrictions: [Function],
          testPushWebhook: [Function],
          transfer: [Function],
          update: [Function],
          updateBranchProtection: [Function],
          updateCommitComment: [Function],
          updateInformationAboutPagesSite: [Function],
          updateInvitation: [Function],
          updatePullRequestReviewProtection: [Function],
          updateRelease: [Function],
          updateReleaseAsset: [Function],
          updateStatusCheckPotection: [Function],
          updateStatusCheckProtection: [Function],
          updateWebhook: [Function],
          updateWebhookConfigForRepo: [Function],
          uploadReleaseAsset: [Function]
        },
        search: {
          code: [Function],
          commits: [Function],
          issuesAndPullRequests: [Function],
          labels: [Function],
          repos: [Function],
          topics: [Function],
          users: [Function]
        },
        secretScanning: {
          getAlert: [Function],
          listAlertsForEnterprise: [Function],
          listAlertsForOrg: [Function],
          listAlertsForRepo: [Function],
          listLocationsForAlert: [Function],
          updateAlert: [Function]
        },
        teams: {
          addOrUpdateMembershipForUserInOrg: [Function],
          addOrUpdateProjectPermissionsInOrg: [Function],
          addOrUpdateRepoPermissionsInOrg: [Function],
          checkPermissionsForProjectInOrg: [Function],
          checkPermissionsForRepoInOrg: [Function],
          create: [Function],
          createDiscussionCommentInOrg: [Function],
          createDiscussionInOrg: [Function],
          deleteDiscussionCommentInOrg: [Function],
          deleteDiscussionInOrg: [Function],
          deleteInOrg: [Function],
          getByName: [Function],
          getDiscussionCommentInOrg: [Function],
          getDiscussionInOrg: [Function],
          getMembershipForUserInOrg: [Function],
          list: [Function],
          listChildInOrg: [Function],
          listDiscussionCommentsInOrg: [Function],
          listDiscussionsInOrg: [Function],
          listForAuthenticatedUser: [Function],
          listMembersInOrg: [Function],
          listPendingInvitationsInOrg: [Function],
          listProjectsInOrg: [Function],
          listReposInOrg: [Function],
          removeMembershipForUserInOrg: [Function],
          removeProjectInOrg: [Function],
          removeRepoInOrg: [Function],
          updateDiscussionCommentInOrg: [Function],
          updateDiscussionInOrg: [Function],
          updateInOrg: [Function]
        },
        users: {
          addEmailForAuthenticated: [Function],
          addEmailForAuthenticatedUser: [Function],
          block: [Function],
          checkBlocked: [Function],
          checkFollowingForUser: [Function],
          checkPersonIsFollowedByAuthenticated: [Function],
          createGpgKeyForAuthenticated: [Function],
          createGpgKeyForAuthenticatedUser: [Function],
          createPublicSshKeyForAuthenticated: [Function],
          createPublicSshKeyForAuthenticatedUser: [Function],
          deleteEmailForAuthenticated: [Function],
          deleteEmailForAuthenticatedUser: [Function],
          deleteGpgKeyForAuthenticated: [Function],
          deleteGpgKeyForAuthenticatedUser: [Function],
          deletePublicSshKeyForAuthenticated: [Function],
          deletePublicSshKeyForAuthenticatedUser: [Function],
          follow: [Function],
          getAuthenticated: [Function],
          getByUsername: [Function],
          getContextForUser: [Function],
          getGpgKeyForAuthenticated: [Function],
          getGpgKeyForAuthenticatedUser: [Function],
          getPublicSshKeyForAuthenticated: [Function],
          getPublicSshKeyForAuthenticatedUser: [Function],
          list: [Function],
          listBlockedByAuthenticated: [Function],
          listBlockedByAuthenticatedUser: [Function],
          listEmailsForAuthenticated: [Function],
          listEmailsForAuthenticatedUser: [Function],
          listFollowedByAuthenticated: [Function],
          listFollowedByAuthenticatedUser: [Function],
          listFollowersForAuthenticatedUser: [Function],
          listFollowersForUser: [Function],
          listFollowingForUser: [Function],
          listGpgKeysForAuthenticated: [Function],
          listGpgKeysForAuthenticatedUser: [Function],
          listGpgKeysForUser: [Function],
          listPublicEmailsForAuthenticated: [Function],
          listPublicEmailsForAuthenticatedUser: [Function],
          listPublicKeysForUser: [Function],
          listPublicSshKeysForAuthenticated: [Function],
          listPublicSshKeysForAuthenticatedUser: [Function],
          setPrimaryEmailVisibilityForAuthenticated: [Function],
          setPrimaryEmailVisibilityForAuthenticatedUser: [Function],
          unblock: [Function],
          unfollow: [Function],
          updateAuthenticated: [Function]
        },
        rest: {
          actions: [Object],
          activity: [Object],
          apps: [Object],
          billing: [Object],
          checks: [Object],
          codeScanning: [Object],
          codesOfConduct: [Object],
          codespaces: [Object],
          dependabot: [Object],
          dependencyGraph: [Object],
          emojis: [Object],
          enterpriseAdmin: [Object],
          gists: [Object],
          git: [Object],
          gitignore: [Object],
          interactions: [Object],
          issues: [Object],
          licenses: [Object],
          markdown: [Object],
          meta: [Object],
          migrations: [Object],
          orgs: [Object],
          packages: [Object],
          projects: [Object],
          pulls: [Object],
          rateLimit: [Object],
          reactions: [Object],
          repos: [Object],
          search: [Object],
          secretScanning: [Object],
          teams: [Object],
          users: [Object]
        },
        config: { get: [AsyncFunction: get] }
      },
      log: [Function: logInfo] {
        trace: [Function: bound noop],
        debug: [Function: bound noop],
        info: [Function: bound LOG],
        warn: [Function: bound LOG],
        error: [Function: bound LOG],
        fatal: [Function: bound ],
        levels: { labels: [Object], values: [Object] },
        silent: [Function: bound noop],
        constructor: [Function: bound Pino],
        child: [Function: bound child],
        bindings: [Function: bound bindings],
        setBindings: [Function: bound setBindings],
        flush: [Function: bound flush],
        isLevelEnabled: [Function: bound isLevelEnabled],
        version: '6.14.0',
        level: 'info',
        levelVal: 30,
        _events: undefined,
        _eventsCount: 0,
        _maxListeners: undefined,
        setMaxListeners: [Function: bound setMaxListeners],
        getMaxListeners: [Function: bound getMaxListeners],
        emit: [Function: bound emit],
        addListener: [Function: bound addListener],
        on: [Function: bound addListener],
        prependListener: [Function: bound prependListener],
        once: [Function: bound once],
        prependOnceListener: [Function: bound prependOnceListener],
        removeListener: [Function: bound removeListener],
        off: [Function: bound removeListener],
        removeAllListeners: [Function: bound removeAllListeners],
        listeners: [Function: bound listeners],
        rawListeners: [Function: bound rawListeners],
        listenerCount: [Function: bound listenerCount],
        eventNames: [Function: bound eventNames]
      }
    }

      at handleLabelEvent (lib/bot/ciflowPushTrigger.ts:146:11)
          at async Promise.all (index 0)

Done in 2.15s.
